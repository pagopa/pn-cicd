AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  CodestarGitHubConnectionArn:
    Type: String
    Default: arn:aws:codestar-connections:eu-central-1:911845998067:connection/b28acf11-85de-478c-8ed2-2823f8c2a92d
  RepositoryName:
    Type: String
    Default: pagopa/pn-cicd
  BranchName:
    Type: String
    Default: main

Resources:
  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      Token: '{{resolve:secretsmanager:github:SecretString:token}}'
      ServerType: GITHUB
      AuthType: PERSONAL_ACCESS_TOKEN

  CodePipelineBucket:
    Type: AWS::S3::Bucket

  PnCiCdTemplatesBucket:
    Type: AWS::S3::Bucket

  pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref 'CodePipelineBucket'
      RoleArn: !GetAtt 'PipelineRole.Arn'
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref 'CodestarGitHubConnectionArn'
                FullRepositoryId: !Ref 'RepositoryName'
                BranchName: !Ref 'BranchName'
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: deployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref 'PnCiCdTemplatesBucket'
                Extract: true
              InputArtifacts:
                - Name: TemplateSource
              RunOrder: 1
            - Name: CreateStack-Pn_parent-ci
              InputArtifacts:
                - Name: TemplateSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: pn-parent-ci
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt 'CFNRole.Arn'
                TemplatePath: 'TemplateSource::build/mvn-jar-codebuild.yaml'
                ParameterOverrides: '{"GitHubProjectName": "pn-parent","CodeArtifactDomainName": "pn-develop-bootstrap-step-01-domain", "CodeArtifactRepositoryName":"pn-develop-bootstrap-step-01-repo"}'
              OutputArtifacts: [ ]
              RunOrder: 2
            - Name: CreateStack-Pn_model-ci
              InputArtifacts:
                - Name: TemplateSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: pn-model-ci
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt 'CFNRole.Arn'
                TemplatePath: 'TemplateSource::build/mvn-jar-codebuild.yaml'
                ParameterOverrides: '{"GitHubProjectName": "pn-model","CodeArtifactDomainName": "pn-develop-bootstrap-step-01-domain", "CodeArtifactRepositoryName":"pn-develop-bootstrap-step-01-repo"}'
              OutputArtifacts: []
              RunOrder: 2
            - Name: CreateStack-Pn_commons-ci
              InputArtifacts:
                - Name: TemplateSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: pn-commons-ci
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt 'CFNRole.Arn'
                TemplatePath: 'TemplateSource::build/mvn-jar-codebuild.yaml'
                ParameterOverrides: '{"GitHubProjectName": "pn-commons","CodeArtifactDomainName": "pn-develop-bootstrap-step-01-domain", "CodeArtifactRepositoryName":"pn-develop-bootstrap-step-01-repo"}'
              OutputArtifacts: [ ]
              RunOrder: 2
            - Name: CreateStack-Pn_delivery-ci
              InputArtifacts:
                - Name: TemplateSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: pn-delivery-ci
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt 'CFNRole.Arn'
                TemplatePath: 'TemplateSource::build/mvn-docker-codebuild.yaml'
                ParameterOverrides: '{"GitHubProjectName": "pn-delivery","CodeArtifactDomainName": "pn-develop-bootstrap-step-01-domain", "CodeArtifactRepositoryName":"pn-develop-bootstrap-step-01-repo"}'
              OutputArtifacts: [ ]
              RunOrder: 2
            - Name: CreateStack-Pn_delivery-push-ci
              InputArtifacts:
                - Name: TemplateSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: pn-delivery-push-ci
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt 'CFNRole.Arn'
                TemplatePath: 'TemplateSource::build/mvn-docker-codebuild.yaml'
                ParameterOverrides: '{"GitHubProjectName": "pn-delivery-push","CodeArtifactDomainName": "pn-develop-bootstrap-step-01-domain", "CodeArtifactRepositoryName":"pn-develop-bootstrap-step-01-repo"}'
              OutputArtifacts: [ ]
              RunOrder: 2
            - Name: CreateStack-pn-external-channels-ci
              InputArtifacts:
                - Name: TemplateSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: pn-external-channels-ci
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt 'CFNRole.Arn'
                TemplatePath: 'TemplateSource::build/mvn-docker-codebuild.yaml'
                ParameterOverrides: '{"GitHubProjectName": "pn-external-channels","CodeArtifactDomainName": "pn-develop-bootstrap-step-01-domain", "CodeArtifactRepositoryName":"pn-develop-bootstrap-step-01-repo"}'
              OutputArtifacts: [ ]
              RunOrder: 2
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudFormationStmnt1
                Action:
                  - 'iam:*'
                  - 'codebuild:*'
                  - 'codestar-notifications:*'
                  - 'ecr:*'
                Effect: Allow
                Resource: '*'



  S3Policy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for creating working with s3 buckets
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
            Resource:
              - !Sub arn:aws:s3:::${CodePipelineBucket}/*
              - !Sub arn:aws:s3:::${PnCiCdTemplatesBucket}/*
              - !Sub arn:aws:s3:::${CodePipelineBucket}
              - !Sub arn:aws:s3:::${PnCiCdTemplatesBucket}

  CodePipelinePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for code pipeline
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DeleteStack
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - cloudformation:DescribeStackResources
              - codepipeline:PutJobFailureResult
              - codepipeline:PutJobSuccessResult
              - iam:PassRole
            Resource:
              - '*'

  CodestarPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy for codestar connection
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'codestar-connections:*'
            Resource:
              - !Ref 'CodestarGitHubConnectionArn'
              - !Sub 'arn:aws:codestar-connections:*:${AWS::AccountId}:host/*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Ref S3Policy
        - !Ref CodePipelinePolicy
        - !Ref CodestarPolicy

Outputs:
  PipelineName:
    Value: !Ref 'pipeline'

  PnCiCdTemplatesBucket:
    Description: The bucket to store common template
    Value: !Ref PnCiCdTemplatesBucket
    Export:
      Name: !Sub "${AWS::StackName}-TemplatesBucket"

