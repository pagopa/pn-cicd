AWSTemplateFormatVersion: '2010-09-09'
Description: 'Continuos Delivery pipeline for infrastructure deployment'
Parameters:
  
  ProjectName:
    Description: Usually "pn", can be changed for feature branch deployment
    Default: 'pn'
    Type: String
  
  EnvName:
    Description: 'dev, svil, test, coll, ...'
    Type: String
  
  CiAccountId:
    Default: '911845998067'
    Description: 'AWS AccountID used for C.I. tasks'
    Type: String

  CiArtifactBucketNameParam:
    Default: 'pn-ci-root-ciartifactbucket-k7htwr5id1op'
    Description: 'Bucket name containing lambda and frontend artifacts'
    Type: String

  E2EVpcId:
    Type: String
    Default: ''
    Description: 'VPC used to run E2E tests'

  E2ESubnetsIds:
    Type: CommaDelimitedList
    Description: 'subnets ids comma separated list. Where to run E2E tests'

  E2ESecurityGroupId:
    Type: String
    Default: ''
    Description: 'E2E Security Group ID'

Conditions:
  IsHotfixCondition: !Equals [ !Ref EnvName, 'hotfix' ]
  IsDevCondition: !Equals [ !Ref EnvName, 'dev' ]
  IsSvilCondition: !Equals [ !Ref EnvName, 'svil' ]
  IsTestCondition: !Or [ !Condition IsHotfixCondition, !Condition IsDevCondition, !Condition IsSvilCondition ]
  IsContinuousDeliveryCondition: !Or [ !Condition IsHotfixCondition, !Condition IsDevCondition ]
  HasE2EVpcId: !Not [ !Equals [ !Ref E2EVpcId, '' ] ]
  HasE2ESecurityGroupId: !Not [ !Equals [ !Ref E2ESecurityGroupId, '' ] ]
  HasE2ESubnetsIds: !Not [!Equals [!Join ['', !Ref E2ESubnetsIds], '']]
  HasE2EVPCConfig: !And [ !Condition HasE2EVpcId, !Condition HasE2ESecurityGroupId, !Condition HasE2ESubnetsIds ]
  IsTestEnv: !Equals [ !Ref EnvName, 'test' ]
  IsUatEnv: !Equals [ !Ref EnvName, 'uat' ]
  IsProdEnv: !Equals [ !Ref EnvName, 'prod' ]
  IsNewConfiguration: !Or [ !Condition IsTestEnv, !Condition IsUatEnv, !Condition IsProdEnv ]
  RequiresSingleProjects: !Or [ !Condition IsContinuousDeliveryCondition, !Condition IsNewConfiguration ]

Mappings: 
  EventPatternMap: 
    dev: 
      BuildEvtPatten: |
        {
          "$or": [{
            "source": [{"prefix": "" }],
            "detail": {
                "project_branch": ["develop"],
                "project": [{ "anything-but": [ "pn-cicd" ] }]
            }
          },{
            "source": [{"prefix": "" }],
            "detail": {
                "project_branch": ["main"],
                "project": ["pn-cicd"]
            }
          }]
        }
    hotfix: 
      BuildEvtPatten: |
        {
          "source": [{"prefix": "" }],
          "detail": { "project_branch": ["main"] }
        }
          


Resources:

  ###                    Continuos Delivery EVENT BUS                     ###
  ###########################################################################
  # - Receive Continuos Integration build events and activate the needed 
  #   Continuos Delivery pipeline
  CdEventBus:
    Condition: IsContinuousDeliveryCondition
    Type: AWS::Events::EventBus
    Properties: 
      Name: 'CdEventBus'
  
  # Receive Events from CI system
  CdEventBusAccessPolicy: 
    Condition: IsContinuousDeliveryCondition
    Type: AWS::Events::EventBusPolicy
    Properties: 
      EventBusName: !Ref CdEventBus
      StatementId: "allowEventsFromCI"
      Statement: 
        Effect: "Allow"
        Principal: 
            AWS: !Sub "arn:aws:iam::${CiAccountId}:root"
        Action: "events:PutEvents"
        Resource: !GetAtt "CdEventBus.Arn"
  

  ###                           CI to CD BRIDGE                           ###
  ###########################################################################
  # EVENT BRIDGE RULE: transform events into CodeBuild Execution
  SendAllBuildEventsToCodeBuild:
    Condition: IsContinuousDeliveryCondition
    Type: AWS::Events::Rule
    Properties: 
      Description: Save build events
      RoleArn: !GetAtt "EventBusRunCodeBuildRole.Arn"
      EventBusName: !Ref CdEventBus
      EventPattern: !FindInMap [ EventPatternMap, !Ref EnvName, BuildEvtPatten ]
      Targets: 
        - Id: 'CdEventBus-ToPipelineChooser'
          Arn: !GetAtt ChooseAndLaunchPipelineCodeBuild.Arn
          RoleArn: !GetAtt "EventBusRunCodeBuildRole.Arn"
          InputTransformer:
            InputPathsMap:
              "project_type": "$.detail.project_type"
              "project": "$.detail.project"
              "project_branch": "$.detail.project_branch"
              "image_url": "$.detail.image_url"
              "commit_id": "$.detail.commit_id"
            InputTemplate: |
              {
                "environmentVariablesOverride": [{
                    "name": "PROJECT_TYPE",
                    "type": "PLAINTEXT",
                    "value": <project_type>
                  },
                  {
                    "name": "PROJECT",
                    "type": "PLAINTEXT",
                    "value": <project>
                  },
                  {
                    "name": "PROJECT_BRANCH",
                    "type": "PLAINTEXT",
                    "value": <project_branch>
                  },
                  {
                    "name": "COMMIT_ID",
                    "type": "PLAINTEXT",
                    "value": <commit_id>
                  },
                  {
                    "name": "IMAGE_URL",
                    "type": "PLAINTEXT",
                    "value": <image_url>
                  }
                ]
              }

  # - Role and policy used to activate CodeBuild from EventBridge rule
  EventBusRunCodeBuildRole:
    Condition: IsContinuousDeliveryCondition
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyName: runCodeBuild
          PolicyDocument:
            Statement:
              - Sid: startProjectRun
                Action:
                  - "codebuild:*"
                Effect: Allow
                Resource: 
                  - !GetAtt ChooseAndLaunchPipelineCodeBuild.Arn
                  - !GetAtt RunTestsCodebuildProject.Arn


  ###           CodeBuild: CHOOSE AND EXECUTE THE C.D. PIPELINE           ###
  ###########################################################################
  # - The codebuild project
  ChooseAndLaunchPipelineCodeBuild:
    Condition: IsContinuousDeliveryCondition
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: 'ChooseCdPipeline'
      ConcurrentBuildLimit: 1
      ServiceRole: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Source: 
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - env
            build:
              commands:
                - 'echo " launch right pipeline"'
                - 'echo "PROJECT_NAME=$PROJECT"'
                - 'echo "PROJECT_TYPE=$PROJECT_TYPE"'
                - 'echo "PROJECT_BRANCH=$PROJECT_BRANCH"'
                - 'echo "COMMIT_ID=$COMMIT_ID"'
                - 'echo "IMAGE_URL=$IMAGE_URL"'
                - |
                  if ( [ ! -z "$IMAGE_URL" ]) then
                    IMAGE_URL=$(echo $IMAGE_URL | sed "s/eu-central-1/eu-south-1/g")
                    echo "REPLACE IMAGE URL = $IMAGE_URL"
                  fi
                - 'echo ""'
                - 'echo "Retrieve commit configuration file"'
                - 'aws s3 cp s3://${CdArtifactBucketName}/config/desired-commit-ids-env.sh desired-commit-ids-env.sh'
                - 'cat desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "Mutate commit configuration file"'
                - |
                  if ( [ "$PROJECT" = "pn-cicd" ] ) then
                    sed -i -e "s|cd_scripts_commitId=.*|cd_scripts_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    export PIPELINE_NAME=""
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-infra-core" ] ) then
                    sed -i -e "s|pn_infra_core_commitId=.*|pn_infra_core_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-infra-authfleet-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-infra" ] ) then
                    sed -i -e "s|pn_infra_commitId=.*|pn_infra_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-infra-authfleet-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-auth-fleet" ] ) then
                    sed -i -e "s|pn_authfleet_commitId=.*|pn_authfleet_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-infra-authfleet-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-frontend" ] ) then
                    sed -i -e "s|pn_frontend_commitId=.*|pn_frontend_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-frontend-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-delivery" ] ) then
                    sed -i -e "s|pn_delivery_commitId=.*|pn_delivery_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_delivery_imageUrl=.*|pn_delivery_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-delivery-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-delivery-push" ] ) then
                    sed -i -e "s|pn_delivery_push_commitId=.*|pn_delivery_push_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_delivery_push_imageUrl=.*|pn_delivery_push_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-delivery-push-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-mandate" ] ) then
                    sed -i -e "s|pn_mandate_commitId=.*|pn_mandate_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_mandate_imageUrl=.*|pn_mandate_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-mandate-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-user-attributes" ] ) then
                    sed -i -e "s|pn_user_attributes_commitId=.*|pn_user_attributes_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_user_attributes_imageUrl=.*|pn_user_attributes_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-user-attributes-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-external-registries" ] ) then
                    sed -i -e "s|pn_external_registries_commitId=.*|pn_external_registries_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_external_registries_imageUrl=.*|pn_external_registries_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-external-registries-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-downtime-logs" ] ) then
                    sed -i -e "s|pn_downtime_logs_commitId=.*|pn_downtime_logs_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_downtime_logs_imageUrl=.*|pn_downtime_logs_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-downtime-logs-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-radd-fsu" ] ) then
                    sed -i -e "s|pn_radd_fsu_commitId=.*|pn_radd_fsu_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_radd_fsu_imageUrl=.*|pn_radd_fsu_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-radd-fsu-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-external-channels" ] ) then
                    sed -i -e "s|pn_external_channels_commitId=.*|pn_external_channels_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_external_channels_imageUrl=.*|pn_external_channels_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-external-channels-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-logsaver-be" ] ) then
                    sed -i -e "s|pn_logsaver_be_commitId=.*|pn_logsaver_be_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_logsaver_be_imageUrl=.*|pn_logsaver_be_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-logsaver-be-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-national-registries" ] ) then
                    sed -i -e "s|pn_national_registries_commitId=.*|pn_national_registries_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_national_registries_imageUrl=.*|pn_national_registries_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-national-registries-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-apikey-manager" ] ) then
                    sed -i -e "s|pn_apikey_manager_commitId=.*|pn_apikey_manager_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_apikey_manager_imageUrl=.*|pn_apikey_manager_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-apikey-manager-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-paper-channel" ] ) then
                    sed -i -e "s|pn_paper_channel_commitId=.*|pn_paper_channel_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_paper_channel_imageUrl=.*|pn_paper_channel_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-pn-paper-channel-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-progression-sensor" ] ) then
                    sed -i -e "s|pn_progression_sensor_commitId=.*|pn_progression_sensor_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-progression-sensor-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-kafka-bridge" ] ) then
                    sed -i -e "s|pn_kafka_bridge_commitId=.*|pn_kafka_bridge_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_kafka_bridge_imageUrl=.*|pn_kafka_bridge_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-kafka-bridge-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-radd-bff" ] ) then
                    sed -i -e "s|pn_radd_bff_commitId=.*|pn_radd_bff_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_radd_bff_imageUrl=.*|pn_radd_bff_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-radd-bff-update-pipeline"
                  fi          
                - |
                  if ( [ "$PROJECT" = "pn-platform-usage-estimates" ] ) then
                    sed -i -e "s|pn_platform_usage_estimates_commitId=.*|pn_platform_usage_estimates_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_platform_usage_estimates_imageUrl=.*|pn_platform_usage_estimates_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-platform-usage-estimates-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-logextractor-be" ] ) then
                    sed -i -e "s|pn_logextractor_be_commitId=.*|pn_logextractor_be_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    sed -i -e "s|pn_logextractor_be_imageUrl=.*|pn_logextractor_be_imageUrl=$IMAGE_URL|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-logextractor-be-update-pipeline"
                  fi                  
                - |
                  if ( [ "$PROJECT" = "pn-helpdesk-fe" ] ) then
                    sed -i -e "s|pn_helpdesk_fe_commitId=.*|pn_helpdesk_fe_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-helpdesk-fe-update-pipeline"
                  fi
                - |
                  if ( [ "$PROJECT" = "pn-showcase-site" ] ) then
                    sed -i -e "s|pn_showcase_site_commitId=.*|pn_showcase_site_commitId=$COMMIT_ID|" desired-commit-ids-env.sh
                    export PIPELINE_NAME="pn-showcase-site-update-pipeline"
                  fi              
                - 'cat desired-commit-ids-env.sh'
                - 'echo "Upload commit configuration file"'
                - 'aws s3 cp desired-commit-ids-env.sh s3://${CdArtifactBucketName}/config/desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo ""'
                - |
                  if ( [ "$PROJECT" = "pn-auth-fleet" ] ) then
                    git clone https://github.com/pagopa/pn-auth-fleet.git
                    ( cd pn-auth-fleet && git checkout $COMMIT_ID )
                    existsFunctionsFolder=$(find ./pn-auth-fleet -name functions | wc -l)
                    if ( [ $existsFunctionsFolder != "1" ] ) then

                      echo "Check pn-auth-fleet build end"
                      
                      existsAuthorizerv2FunctionsFolder=$(find ./pn-auth-fleet -name "apikeyAuthorizerV2" | wc -l)

                      if ( [ $existsAuthorizerv2FunctionsFolder = "1" ] ) then
                        apiKeyAuth=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-auth-fleet/commits/${COMMIT_ID}/apikeyAuthorizerV2.zip" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                        echo "apiKeyAuth is build ${apiKeyAuth}"
                      else
                        apiKeyAuth=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-auth-fleet/commits/${COMMIT_ID}/apikeyAuthorizer.zip" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                        echo "apiKeyAuth is build ${apiKeyAuth}"
                      fi

                      ioAuth=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-auth-fleet/commits/${COMMIT_ID}/ioAuthorizer.zip" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                      echo "ioAuth is build ${ioAuth}"
                      
                      jwtAuth=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-auth-fleet/commits/${COMMIT_ID}/jwtAuthorizer.zip" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                      echo "jwtAuth is build ${jwtAuth}"
                      
                      tokenExchange=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-auth-fleet/commits/${COMMIT_ID}/tokenExchange.zip" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                      echo "tokenExchange is build ${tokenExchange}"

                      if ( [ "${apiKeyAuth}" = "KO" -o "${ioAuth}" = "KO" -o "${jwtAuth}" = "KO" -o "${tokenExchange}" = "KO" ] ) then
                        echo "##### WARNING pn-auth-fleet have not ended"
                        export PIPELINE_NAME=""
                      fi
                    fi
                  fi
                - |
                  if ( [ "$PIPELINE_NAME" = "pn-frontend-update-pipeline" ] ) then
                    echo "Check pn-frontend build end"
                    
                    pf=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-frontend/commits/${COMMIT_ID}/pn-personafisica-webapp.tar.gz" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                    echo "pf is build ${pf}"

                    pfl=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-frontend/commits/${COMMIT_ID}/pn-personafisica-login.tar.gz" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                    echo "pfl is build ${pfl}"

                    pa=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-frontend/commits/${COMMIT_ID}/pn-pa-webapp.tar.gz" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                    echo "pa is build ${pa}"

                    pg=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-frontend/commits/${COMMIT_ID}/pn-personagiuridica-webapp.tar.gz" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                    echo "pg is build ${pg}"

                    landing=$( ( aws s3api head-object --bucket ${CiArtifactBucketName} --key "pn-frontend/commits/${COMMIT_ID}/pn-landing-webapp.tar.gz" 2> /dev/null > /dev/null ) && echo "OK"  || echo "KO" )
                    echo "landing is build ${landing}"

                    if ( [ "${pf}" = "KO" -o "${pfl}" = "KO" -o "${pa}" = "KO" -o "${pg}" = "KO" -o "${landing}" = "KO" ] ) then
                      echo "##### WARNING pn-frontend have not ended"
                      export PIPELINE_NAME=""
                    fi
                  fi
                - |
                  if ( [ "$PIPELINE_NAME" != "" ] ) then
                    echo "Launch pipeline ${PIPELINE_NAME}"
                    aws codepipeline  start-pipeline-execution --name ${PIPELINE_NAME}
                  fi
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
        EnvironmentVariables:
          - Name: CdArtifactBucketName
            Type: PLAINTEXT
            Value: !Ref CdArtifactBucket
          - Name: CiArtifactBucketName
            Type: PLAINTEXT
            Value: !Ref CiArtifactBucketNameParam


  # CodeBuild Role used during the choose of right codepipeline
  ChooseAndLaunchPipelineCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
          - 
            Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Ref CodeBuildManagedPolicy
        - !Ref CodeBuildPolicyR53
        - !Ref CodeBuildPolicyS3
        - !Ref CodeBuildPolicyECS
        - !Ref CodeBuildPolicyAPICloudfront
        - !Ref CodeBuildPolicyEventLogs
        - !Ref CodeBuildPolicyIAM
        - !Ref CodeBuildNetworking
      
  ###########################################################################
  ###             EFFECTIVE CONTINUOS INTEGRATIONS PIPELINES              ###
  ###########################################################################
  # - Where the tasks downloads github project; lambda zip and frontend tgz
  CdArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
  
  # - Required by code-pipeline 
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
  
  # PIPELINE DEFINITION
  #######################
  DeployPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-env-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # UpdateInfrastructure AND AuthFleet
            - Name: Update_Infrastructure
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateInfraCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: InfraOutput
              RunOrder: 2
            
            # Update pn-delivery
            - Name: Update_PnDelivery
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-delivery", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"1", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_delivery", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnDeliveryOutput
              RunOrder: 3
            
            # Update pn-delivery-push
            - Name: Update_PnDeliveryPush
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-delivery-push", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"2", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_delivery_push", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnDeliveryPushOutput
              RunOrder: 3
            
            # Update pn-mandate
            - Name: Update_PnMandate
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-mandate", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"4", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_mandate", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnMandateOutput
              RunOrder: 3
            
            # Update pn-external-registries
            - Name: Update_ExternalRegistries
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-external-registries", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"6", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_external_registries", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnExternalRegistriesOutput
              RunOrder: 3
            
            # Update pn-UserAttributes
            - Name: Update_UserAttributes
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-user-attributes", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"7", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_user_attributes", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnUserAttributesOutput
              RunOrder: 3
            
            # Update pn-downtime-logs
            - Name: Update_DowntimeLogs
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-downtime-logs", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"8", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_downtime_logs", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnDowntimeLogsOutput
              RunOrder: 3
            
            # Update pn-radd-fsu
            - Name: Update_RaddFsu
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-radd-fsu", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"9", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_radd_fsu", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnRaddFsuOutput
              RunOrder: 3
            
            # Update pn-logsaver-be
            - Name: Update_LogsaverBe
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-logsaver-be", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"10", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_logsaver_be", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnLogsaverBeOutput
              RunOrder: 3

            # Update pn-national-registries
            - Name: Update_NationalRegistries
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-national-registries", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"11", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_national_registries", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnNationalRegistriesOutput
              RunOrder: 3

            # Update pn-apikey-manager
            - Name: Update_ApiKeyManager
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-apikey-manager", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"12", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_apikey_manager", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnApiKeyManagerOutput
              RunOrder: 3

            # Update pn-paper-channel
            - Name: Update_PaperChannel
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-paper-channel", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"13", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_paper_channel", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnPaperChannelOutput
              RunOrder: 3

            # Update pn-kafka-bridge
            - Name: Update_KafkaBridge
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-kafka-bridge", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"14", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_kafka_bridge", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnKafkaBridgeOutput
              RunOrder: 3

            # Update pn-progression-sensor
            - Name: Update_ProgressionSensor
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMultiLambdaServiceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-progression-sensor", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"0", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_progression_sensor", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnProgressionSensorOutput
              RunOrder: 3

            # Update Frontend
            - Name: Update_Frontend
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateFrontendCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: FrontEndOutput
              RunOrder: 4
            
            # Update logs and Usage Plans
            - Name: Infrastructure_Post_Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref PostDeployScriptsCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PostDeployScriptsOutput
              RunOrder: 4

            # Run test if the environment is dev
            - Fn::If:
                - IsTestCondition
                - Name: Run_e2e_Tests
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Version: 1
                    Provider: CodeBuild
                  Configuration:
                    ProjectName: !Ref RunTestsCodebuildProject
                    EnvironmentVariables: !Sub '[
                        {"name":"ENV_NAME", "value":"${EnvName}", "type":"PLAINTEXT"},
                        {"name":"REGION", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                        {"name":"TEST_SUITE", "value":"CucumberSmokeTest", "type":"PLAINTEXT"}
                      ]'
                  InputArtifacts:
                    - Name: EmptyZip
                  RunOrder: 5
                - !Ref AWS::NoValue
            
            # List versions if the environment is dev
            - Fn::If:
                - IsContinuousDeliveryCondition
                - Name: List_Versions
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Version: 1
                    Provider: CodeBuild
                  Configuration:
                    ProjectName: !Ref ListDeployedVersionsCodebuildProject
                    EnvironmentVariables: !Sub '[
                        {"name":"ENV_NAME", "value":"${EnvName}", "type":"PLAINTEXT"},
                        {"name":"REGION", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                        {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                        {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"}
                      ]'
                  InputArtifacts:
                    - Name: EmptyZip
                  RunOrder: 6
                - !Ref AWS::NoValue


  # CODEBUILD used to download scripts
  ###################################################
  DownloadScriptsCodebuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-DownloadScriptsCodebuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo "### NO PRE_BUILD"
            build:
              commands:
                - 'echo "### ENVIRONMENT ###"'
                - 'echo "###################"'
                - env
                - 'echo ""'
                - | 
                  aws s3api get-object --bucket ${DesiredCommitIdsBucketName} --key ${DesiredCommitIdsPath} desired-commit-ids-env.sh --version-id ${DesiredCommitIdsVersionId}
                  cat desired-commit-ids-env.sh
                  echo "### DOWNLOAD DESIRED COMMIT IDS ###"
                  echo ""
                  echo "### SOURCE DESIRED COMMIT IDS ###"
                  . ./desired-commit-ids-env.sh  
                  echo ""
                  echo ""
                  echo "### UPDATED ENVIRONMENT ###"
                  echo "###########################"
                  env
                  echo "### CLONE CICD SCRIPTS ###"
                  echo ""
                  git clone https://github.com/pagopa/pn-cicd.git
                  ( cd pn-cicd && git checkout $cd_scripts_commitId )
                  echo ""
                  if ( [ ! -z "$PnConfigurationEnabled" ] ) then
                    echo "### Execute Download Custom Config ###"
                    ( ./pn-cicd/cd-cli/downloadCustomConfig.sh -r $AwsRegion -e $EnvName -w $(pwd) -c main -i $CiAccountId )
                    . ./desired-commit-ids-env.sh
                    echo ""
                    echo ""
                    echo "### UPDATED ENVIRONMENT AFTER CUSTOM CONFIG ###"
                    env
                    echo ""
                  else
                    ( ./pn-cicd/cd-cli/downloadCustomConfig.sh -r $AwsRegion -e $EnvName -w $(pwd) )
                  fi
                  ( cp -r custom-config/* pn-cicd/cd-cli/custom-config )                  
                  ls -l pn-cicd/cd-cli/custom-config
                - 'echo ""'
                - 'echo ""'
                - 'echo "### PREPARE ARTIFACT ###"'
                - 'echo "########################"'
                - 'mkdir scripts'
                - 'cp -r pn-cicd/cd-cli scripts'
                - 'cp desired-commit-ids-env.sh scripts'
                - 'find scripts'
          artifacts:
            files:
              - 'scripts/**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
        EnvironmentVariables:
          - Name: PnConfigurationEnabled
            Type: PLAINTEXT
            Value: !If [ IsNewConfiguration, 'main', '' ]
          - Name: CiAccountId
            Type: PLAINTEXT
            Value: !Ref CiAccountId
        
  # CODEBUILD used to update infrastructure and authFleet
  ###################################################
  UpdateInfraCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-UpdateInfraCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - 'echo "### SCRIPTS ###"'
                - 'find scripts'
                - 'echo "### SOURCE DESIRED COMMIT IDS ###"'
                - '. ./scripts/desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "###     ENVIRONMENT     ###"'
                - 'echo "###########################"'
                - env
            build:
              commands:
                - 'custom_config_dir=$( cd "scripts/cd-cli/custom-config" && pwd)'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - |
                  if ( [ ! -z "$pn_infra_core_commitId"  ] ) then
                    echo "########################################################"
                    echo "###                   UPDATE NETWORKING              ###"
                    echo "########################################################"
                    echo ""
                    (cd scripts/cd-cli && ./deployNetworking.sh -r $AwsRegion -e $EnvName -i $pn_infra_core_commitId -a core -w /tmp -c $custom_config_dir )
                    (cd scripts/cd-cli && ./deployCognito.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -w /tmp -c $custom_config_dir -b $CdArtifactBucketName )
                    (cd scripts/cd-cli && ./deployOpensearch.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -w /tmp -c $custom_config_dir -b $CdArtifactBucketName )
                    (cd scripts/cd-cli && ./deployCache.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -w /tmp -c $custom_config_dir -b $CdArtifactBucketName )
                  fi
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "########################################################"'
                - 'echo "###                   UPDATE INFRA                   ###"'
                - 'echo "########################################################"'
                - 'echo ""'
                - '(cd scripts/cd-cli && ./deployInfra.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "#########################################################"'
                - 'echo "###                UPDATE LOGS EXPORTS                ###"'
                - 'echo "#########################################################"'
                - 'echo ""'
                - '(cd scripts/cd-cli && ./deployLogStreaming.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "#########################################################"'
                - 'echo "###                UPDATE INFRA DASHBOARD             ###"'
                - 'echo "#########################################################"'
                - 'echo ""'
                - '(cd scripts/cd-cli && ./deployInfraDashboard.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -b $CdArtifactBucketName -w /tmp -c $custom_config_dir )'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "########################################################"'
                - 'echo "###                 UPDATE AUTHFLEET                 ###"'
                - 'echo "########################################################"'
                - 'echo ""'
                - |
                  git clone https://github.com/pagopa/pn-auth-fleet.git
                  ( cd pn-auth-fleet && git checkout $pn_authfleet_commitId )
                  existsFunctionsFolder=$(find ./pn-auth-fleet -name "functions" | wc -l)
                  existsDeployMultiLambdaScript=$(find ./scripts/cd-cli -name "deployMultiLambdaService.sh" | wc -l)
                  if ( [ $existsFunctionsFolder = "1" -a $existsDeployMultiLambdaScript = "1" ] ) then
                    echo "(cd scripts/cd-cli && ./deployMultiLambdaService.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -n pn-auth-fleet -a $pn_authfleet_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )"
                    (cd scripts/cd-cli && ./deployMultiLambdaService.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -n pn-auth-fleet -a $pn_authfleet_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )
                  else
                    echo "(cd scripts/cd-cli && ./deployAuthFleet.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -a $pn_authfleet_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )"
                    (cd scripts/cd-cli && ./deployAuthFleet.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -a $pn_authfleet_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )
                  fi
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
  

  # CODEBUILD used to update an ecs microservice
  ###################################################
  UpdateMicroserviceCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-UpdateMicroserviceCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - 'echo "### SCRIPTS ###"'
                - 'find scripts'
                - 'echo "### SOURCE DESIRED COMMIT IDS ###"'
                - '. ./scripts/desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "###     ENVIRONMENT     ###"'
                - 'echo "###########################"'
                - env
            build:
              commands:
                - 'custom_config_dir=$( cd "scripts/cd-cli/custom-config" && pwd)'
                - 'ms_image_url=$( env | grep "${VarPrefix}_imageUrl=" | sed -e "s/^[^=]*=//" )'
                - 'ms_commitId=$( env | grep "${VarPrefix}_commitId=" | sed -e "s/^[^=]*=//" )'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "########################################################"'
                - 'echo "###       UPDATE MICROSERVICE $MsName    "'
                - 'echo "########################################################"'
                - 'echo ""'
                - 'echo "./deployEcsService.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -m $ms_commitId -b $CdArtifactBucketName -I $ms_image_url -n $MsName -N $MsNumber -w /tmp -c $custom_config_dir "'
                - '(cd scripts/cd-cli && ./deployEcsService.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -m $ms_commitId -b $CdArtifactBucketName -I $ms_image_url -n $MsName -N $MsNumber -w /tmp -c $custom_config_dir )'
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
  
  # CODEBUILD used to update an multi-lambda MICROSERVICE
  ##############################################################
  UpdateMultiLambdaServiceCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-UpdateMultiLambdaServiceCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - 'echo "### SCRIPTS ###"'
                - 'find scripts'
                - 'echo "### SOURCE DESIRED COMMIT IDS ###"'
                - '. ./scripts/desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "###     ENVIRONMENT     ###"'
                - 'echo "###########################"'
                - env
            build:
              commands:
                - 'custom_config_dir=$( cd "scripts/cd-cli/custom-config" && pwd)'
                - 'ms_commitId=$( env | grep "${VarPrefix}_commitId=" | sed -e "s/^[^=]*=//" )'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "########################################################"'
                - 'echo "###       UPDATE MULTI-LAMBDA MICROSERVICE          "###'
                - 'echo "########################################################"'
                - 'echo ""'
                - 'echo "./deployMultiLambdaService.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -n $MsName -a $ms_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir "'
                - '(cd scripts/cd-cli && ./deployMultiLambdaService.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -n $MsName -a $ms_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )'
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"

  # CODEBUILD used for post microservices deployment scripts
  ###################################################
  PostDeployScriptsCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-PostDeployScriptsCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - 'echo "### SCRIPTS ###"'
                - 'find scripts'
                - 'echo "### SOURCE DESIRED COMMIT IDS ###"'
                - '. ./scripts/desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "###     ENVIRONMENT     ###"'
                - 'echo "###########################"'
                - env
            build:
              commands:
                - 'custom_config_dir=$( cd "scripts/cd-cli/custom-config" && pwd)'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "#########################################################"'
                - 'echo "###                UPDATE COMPOSITE ALARMS            ###"'
                - 'echo "#########################################################"'
                - 'echo ""'
                - '(cd scripts/cd-cli && ./deployCompositeAlarms.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )'
                - 'echo ""'
                - 'echo ""'
                - 'echo "#########################################################"'
                - 'echo "###                UPDATE APIGW USAGE PLAN            ###"'
                - 'echo "#########################################################"'
                - 'echo ""'
                - '(cd scripts/cd-cli && ./deployApiGwUsagePlan.sh -w /tmp -i $pn_infra_commitId -r $AwsRegion APP_IO_BE IO)'
                - '(cd scripts/cd-cli && ./deployApiGwUsagePlan.sh -w /tmp -i $pn_infra_commitId -r $AwsRegion SELCPG PNPG)'
                - '(cd scripts/cd-cli && ./deployApiGwUsagePlan.sh -w /tmp -i $pn_infra_commitId -r $AwsRegion pn_usageplan_small B2B)'
                - '(cd scripts/cd-cli && ./deployApiGwUsagePlan.sh -w /tmp -i $pn_infra_commitId -r $AwsRegion pn_usageplan_medium B2B)'
                - '(cd scripts/cd-cli && ./deployApiGwUsagePlan.sh -w /tmp -i $pn_infra_commitId -r $AwsRegion pn_usageplan_large B2B)'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "#########################################################"'
                - 'echo "###                OER DASHBOARD                      ###"'
                - 'echo "#########################################################"'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - |
                  existsDashboardOer=$(find ./scripts/cd-cli -name deployOerDashboard.sh | wc -l)
                  if ( [ $existsDashboardOer = "1" ] ) then
                    (cd scripts/cd-cli && ./deployOerDashboard.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir)
                  fi
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "#########################################################"'
                - 'echo "###                CLEANUP INFRASTRUCTURE            ###"'
                - 'echo "#########################################################"'
                - 'echo ""'
                - '(cd scripts/cd-cli && ./cleanupInfrastructure.sh -w /tmp -r $AwsRegion)'
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
  
   # CODEBUILD used to update helpdesk fe microservice
  ###################################################
  UpdateHelpdeskCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-UpdateHelpdeskCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 16
              commands:
                #install yarn
                - echo installing yarn
                - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
                - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
                - apt install --no-install-recommends yarn
            pre_build:
              commands:
                - 'echo "### SCRIPTS ###"'
                - 'find scripts'
                - 'echo "### SOURCE DESIRED COMMIT IDS ###"'
                - '. ./scripts/desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "###     ENVIRONMENT     ###"'
                - 'echo "###########################"'
                - env
            build:
              commands:
                - 'custom_config_dir=$( cd "scripts/cd-cli/custom-config" && pwd)'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "########################################################"'
                - 'echo "###       UPDATE MICROSERVICE $MsName    "'
                - 'echo "########################################################"'
                - 'echo ""'
                - 'echo "./deployHelpdeskFeB.sh -v -r $AwsRegion -e $EnvName -m $pn_helpdesk_fe_commitId -f $pn_frontend_commitId -w /tmp -c $custom_config_dir"'
                - '(cd scripts/cd-cli && ./deployHelpdeskFeB.sh -v -r $AwsRegion -e $EnvName -m $pn_helpdesk_fe_commitId -f $pn_frontend_commitId -w /tmp -c $custom_config_dir )'
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"


  # CODEBUILD used to update frontend
  ###################################################
  UpdateFrontendCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-UpdateFrontendCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - 'echo "### SCRIPTS ###"'
                - 'find scripts'
                - 'echo "### SOURCE DESIRED COMMIT IDS ###"'
                - '. ./scripts/desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "###     ENVIRONMENT     ###"'
                - 'echo "###########################"'
                - env
            build:
              commands:
                - 'custom_config_dir=$( cd "scripts/cd-cli/custom-config" && pwd)'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "########################################################"'
                - 'echo "###                  UPDATE FRONTEND                 ###"'
                - 'echo "########################################################"'
                - 'echo ""'
                - 'echo "./deployFrontend.sh -v -r $AwsRegion -e $EnvName -i $pn_infra_commitId -f $pn_frontend_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir"'
                - '(cd scripts/cd-cli && ./deployFrontend.sh -v -r $AwsRegion -e $EnvName -i $pn_infra_commitId -f $pn_frontend_commitId -b $CdArtifactBucketName -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )'
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-cd-pipeline-CodeBuildRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  CodeBuildManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-General
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:GetTemplateSummary
              - cloudformation:ListStacks
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:DescribeStacks
              - cloudformation:ExecuteChangeSet
            Resource: "*"
          - Effect: Allow
            Action: cloudwatch:PutDashboard
            Resource: !Sub arn:aws:cloudwatch::${AWS::AccountId}:dashboard/*
          - Effect: Allow
            Action: elasticloadbalancing:ModifyRule
            Resource: !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener-rule/app/*
          - Effect: Allow
            Action: elasticloadbalancing:ModifyRule
            Resource: !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener-rule/net/*
          - Effect: Allow
            Action:
              - ecr:DescribeImages          
            Resource: "*"    
          - Effect: Allow
            Action: 
              - chatbot:CreateSlackChannelConfiguration
            Resource: '*'
          - Effect: Allow
            Action:
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:GetRole
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:GenerateDataKey
              - kms:GetKeyPolicy
              - kms:GetKeyRotationStatus
              - kms:ListResourceTags
            Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*
          - Effect: Allow
            Action:
              - lambda:GetFunction
              - lambda:GetFunctionCodeSigningConfig
              - lambda:RemovePermission
              - lambda:UpdateFunctionCode
            Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
          - Effect: Allow
            Action:
              - lambda:Create*
              - lambda:Get*
              - lambda:Delete*
              - lambda:TagResource
              - lambda:UpdateEventSourceMapping
              - lambda:AddPermission
              - lambda:InvokeFunction
              - lambda:GetEventSourceMapping
              - lambda:ListEventSourceMappings
              - lambda:DeleteFunction
              - lambda:CreateEventSourceMapping
              - lambda:DeleteEventSourceMapping
              - lambda:UntagResource
              - lambda:Update*
            Resource: "*"
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DeleteLogGroup
              - logs:DeleteSubscriptionFilter
              - logs:DescribeLogGroups
              - logs:ListTagsLogGroup
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
          - Effect: Allow
            Action: secretsmanager:GetSecretValue
            Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*
          - Effect: Allow
            Action: ssm:GetParameters
            Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
          - Effect: Allow
            Action:
              - application-autoscaling:RegisterScalableTarget
              - application-autoscaling:DescribeScalableTargets
              - application-autoscaling:DescribeScalingPolicies
              - application-autoscaling:PutScalingPolicy
              - application-autoscaling:DeleteScalingPolicy
              - application-autoscaling:DeregisterScalableTarget
            Resource: "*"
          - Effect: Allow
            Action:
              - cloudfront:Create*
              - cloudfront:Delete*
              - cloudfront:Get*
              - cloudfront:Update*
            Resource:
              - !Sub arn:aws:cloudfront::${AWS::AccountId}:cache-policy/*
              - !Sub arn:aws:cloudfront::${AWS::AccountId}:origin-request-policy/*
              - !Sub arn:aws:cloudfront::${AWS::AccountId}:response-headers-policy/*
          - Effect: Allow
            Action:
              - cloudfront:List*
            Resource: "*"
          - Effect: Allow
            Resource:
              - "*"
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:StartBuild              
              - codebuild:BatchGetBuilds
              - codebuild:StopBuild               
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
          - Effect: Allow
            Action:
              - ecs:UpdateService
              - ecs:CreateService
              - ecs:DeleteService
              - ecs:DescribeServices
            Resource: !Sub arn:aws:ecs:*:${AWS::AccountId}:service/*/*
          - Action:
              - ecs:DescribeServices
              - ecs:CreateTaskSet
              - ecs:UpdateServicePrimaryTaskSet
              - ecs:DeleteTaskSet
              - lambda:InvokeFunction
              - cloudwatch:DescribeAlarms
              - sns:Publish
              - s3:GetObject
              - s3:GetObjectVersion
            Resource: "*"
            Effect: Allow
          - Effect: Allow
            Action:
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:SetRulePriorities
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:RemoveTags
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:ModifyRule
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:DeleteRule
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DescribeLoadBalancerAttributes
            Resource: "*"
          - Effect: Allow
            Action:
              - "elasticloadbalancing:RegisterTargets"
              - "elasticloadbalancing:CreateTargetGroup"
              - "elasticloadbalancing:DeregisterTargets"
              - "elasticloadbalancing:DeleteTargetGroup"
              - "elasticloadbalancing:ModifyTargetGroupAttributes"
              - "elasticloadbalancing:ModifyTargetGroup"
            Resource: !Sub arn:aws:elasticloadbalancing:*:${AWS::AccountId}:targetgroup/*/*
          - Effect: Allow
            Action:
              - "elasticloadbalancing:DescribeTargetGroupAttributes"
              - "elasticloadbalancing:DescribeTargetHealth"
              - "elasticloadbalancing:DescribeTargetGroups"
            Resource: "*"
          - Effect: Allow
            Action:
              - "cognito-idp:AddCustomAttributes"
              - "cognito-idp:CreateUserPool"
              - "cognito-idp:CreateUserPoolClient"              
              - "cognito-idp:CreateUserPoolDomain"
              - "cognito-idp:DeleteUserPool"
              - "cognito-idp:DeleteUserPoolClient"
              - "cognito-idp:DescribeUserPool"
              - "cognito-idp:DescribeUserPoolClient"
              - "cognito-idp:ListUserPoolClients"
              - "cognito-idp:ListUserPools"
              - "cognito-idp:TagResource"
              - "cognito-idp:UntagResource"
              - "cognito-idp:UpdateUserPool"
              - "cognito-idp:UpdateUserPoolClient"                            
            Resource: "*"
          - Effect: Allow
            Action:
              - "es:*"
            Resource: "*"            
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource: "*"
            Condition:
              StringLike:
                iam:PassedToService:
                  - ecs-tasks.amazonaws.com

  CodeBuildPolicyR53:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-R53
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - route53:ListTagsForResources
              - route53:DisassociateVPCFromHostedZone
              - route53:GetHostedZone
              - route53:ChangeResourceRecordSets
              - route53:ChangeTagsForResource
              - route53:ListResourceRecordSets
              - route53:DeleteHostedZone
              - route53:AssociateVPCWithHostedZone
              - route53:ListTagsForResource
            Resource: arn:aws:route53:::hostedzone/*
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - route53:Delete*
              - route53:Disable*
              - route53:Create*
              - route53:EnableHostedZoneDNSSEC
              - route53:Update*
              - route53:DeactivateKeySigningKey
              - route53:ActivateKeySigningKey
              - route53:ChangeCidrCollection
              - route53:Get*
              - route53:List*
              - route53:DisassociateVPCFromHostedZone
              - route53:ChangeResourceRecordSets
              - route53:ChangeTagsForResource
              - route53:AssociateVPCWithHostedZone
            Resource: "*"
          - Effect: Allow
            Action:
              - ecs:Describe*
              - ecs:List*
              - eks:DescribeCluster
              - eks:ListClusters
              - logs:Describe*
              - logs:Get*
              - logs:TestMetricFilter
              - logs:FilterLogEvents
              - iam:ListInstanceProfiles
              - iam:ListRoles
            Resource: "*"
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - arn:aws:iam::*:role/AWSBatchServiceRole
              - arn:aws:iam::*:role/service-role/AWSBatchServiceRole
              - arn:aws:iam::*:role/ecsInstanceRole
              - arn:aws:iam::*:instance-profile/ecsInstanceRole
              - arn:aws:iam::*:role/iaws-ec2-spot-fleet-role
              - arn:aws:iam::*:role/aws-ec2-spot-fleet-role
              - arn:aws:iam::*:role/AWSBatchJobRole*
          - Effect: Allow
            Action:
              - iam:CreateServiceLinkedRole
            Resource: arn:aws:iam::*:role/*Batch*
            Condition:
              StringEquals:
                iam:AWSServiceName: batch.amazonaws.com
          - Effect: Allow
            Action:
              - codepipeline:TagResource
              - codepipeline:ListPipelineExecutions
              - codepipeline:StartPipelineExecution
              - codepipeline:ListActionExecutions
              - codepipeline:GetPipeline
              - codepipeline:UntagResource
              - codepipeline:ListTagsForResource
              - codepipeline:GetPipelineState
              - codepipeline:GetPipelineExecution
            Resource: !Sub arn:aws:codepipeline:*:${AWS::AccountId}:*
          - Effect: Allow
            Action:
              - codepipeline:EnableStageTransition
              - codepipeline:TagResource
              - codepipeline:ListWebhooks
              - codepipeline:RetryStageExecution
              - codepipeline:UntagResource
              - codepipeline:ListTagsForResource
              - codepipeline:DisableStageTransition
            Resource:
              - !Sub arn:aws:codepipeline:*:${AWS::AccountId}:webhook:*
              - !Sub arn:aws:codepipeline:*:${AWS::AccountId}:*/*
          - Effect: Allow
            Action:
              - codepipeline:ListPipelines
              - codepipeline:GetThirdPartyJobDetails
              - codepipeline:GetJobDetails
              - codepipeline:GetActionType
              - codepipeline:ListActionTypes
            Resource: "*"

  CodeBuildPolicyS3:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-S3
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:*Object
              - s3:GetObjectVersion
              - s3:PutObject*
              - "s3-object-lambda:Get*"
              - "s3-object-lambda:List*"              
            Resource: arn:aws:s3:::*/*
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - s3:Get*
              - s3:Put*
              - s3:Create*
              - s3:List*
              - s3:DeleteBucketPolicy
              - s3:GetBucketLocation
              - s3:DeleteBucket
              - "s3-object-lambda:Get*"
              - "s3-object-lambda:List*"              
            Resource: arn:aws:s3:::*
          - Effect: Allow
            Action: s3:ListAllMyBuckets
            Resource: "*"
          - Effect: Allow
            Action:
              - "kinesis:StopStreamEncryption"
              - "kinesis:DeregisterStreamConsumer"
              - "kinesis:SubscribeToShard"
              - "kinesis:DecreaseStreamRetentionPeriod"
              - "kinesis:PutRecords"
              - "kinesis:DescribeStreamConsumer"
              - "kinesis:CreateStream"
              - "kinesis:GetShardIterator"
              - "kinesis:DescribeStream"
              - "kinesis:RegisterStreamConsumer"
              - "kinesis:ListTagsForStream"
              - "kinesis:PutRecord"
              - "kinesis:RemoveTagsFromStream"
              - "kinesis:DeleteStream"
              - "kinesis:DescribeStreamSummary"
              - "kinesis:SplitShard"
              - "kinesis:MergeShards"
              - "kinesis:AddTagsToStream"
              - "kinesis:IncreaseStreamRetentionPeriod"
              - "kinesis:GetRecords"
              - "kinesis:ListStreamConsumers"
              - "kinesis:StartStreamEncryption"
            Resource:
              - !Sub arn:aws:kms:*:${AWS::AccountId}:key/*
              - !Sub arn:aws:kinesis:*:${AWS::AccountId}:*/*/consumer/*:*
              - !Sub arn:aws:kinesis:*:${AWS::AccountId}:stream/*
          - Effect: Allow
            Action:
              - "kinesis:UpdateStreamMode"
              - "kinesis:ListStreams"
              - "kinesis:EnableEnhancedMonitoring"
              - "kinesis:ListShards"
              - "kinesis:UpdateShardCount"
              - "kinesis:DescribeLimits"
              - "kinesis:DisableEnhancedMonitoring"
            Resource: "*"
          - Effect: Allow
            Action:
              - sqs:DeleteMessage
              - sqs:GetQueueUrl
              - sqs:ChangeMessageVisibility
              - sqs:UntagQueue
              - sqs:ReceiveMessage
              - sqs:SendMessage
              - sqs:GetQueueAttributes
              - sqs:ListQueueTags
              - sqs:TagQueue
              - sqs:RemovePermission
              - sqs:ListDeadLetterSourceQueues
              - sqs:AddPermission
              - sqs:PurgeQueue
              - sqs:DeleteQueue
              - sqs:CreateQueue
              - sqs:SetQueueAttributes
            Resource: !Sub arn:aws:sqs:*:${AWS::AccountId}:*
          - Effect: Allow
            Action: sqs:ListQueues
            Resource: "*"
          - Effect: Allow
            Action:
              - "sns:TagResource"
              - "sns:ListTagsForResource"
              - "sns:PutDataProtectionPolicy"
              - "sns:ListSubscriptionsByTopic"
              - "sns:GetTopicAttributes"
              - "sns:DeleteTopic"
              - "sns:CreateTopic"
              - "sns:SetTopicAttributes"
              - "sns:UntagResource"
              - "sns:AddPermission"
              - "sns:GetDataProtectionPolicy"
              - "sns:Publish"
              - "sns:Subscribe"
              - "sns:ConfirmSubscription"
              - "sns:RemovePermission"
            Resource: !Sub arn:aws:sns:*:${AWS::AccountId}:*
          - Effect: Allow
            Action:
              - "sns:List*"
              - "sns:Unsubscribe"
              - "sns:Create*"
              - "sns:OptInPhoneNumber"
              - "sns:CheckIfPhoneNumberIsOptedOut"
              - "sns:Set*"
              - "sns:DeletePlatformApplication"
              - "sns:DeleteSMSSandboxPhoneNumber"
              - "sns:Get*"
            Resource: "*"

  CodeBuildPolicyData:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-Data
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:Describe*
              - dynamodb:Scan
              - dynamodb:UpdateContributorInsights
              - dynamodb:Query
              - dynamodb:UpdateGlobalTable
              - dynamodb:UpdateGlobalTableSettings
              - dynamodb:PartiQLSelect
              - dynamodb:Get*
              - dynamodb:RestoreTableFromBackup
              - dynamodb:UpdateGlobalTableVersion
              - dynamodb:CreateGlobalTable
              - dynamodb:DeleteBackup
            Resource:
              - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/*/backup/*
              - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/*/import/*
              - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/*/index/*
              - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/*/export/*
              - !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/*/stream/*
              - !Sub arn:aws:dynamodb::${AWS::AccountId}:global-table/*
          - Effect: Allow
            Action:
              - dynamodb:DeleteItem
              - dynamodb:Describe*
              - dynamodb:RestoreTableToPointInTime
              - dynamodb:ListTagsOfResource
              - dynamodb:CreateTableReplica
              - dynamodb:UpdateContributorInsights
              - dynamodb:UpdateGlobalTable
              - dynamodb:CreateBackup
              - dynamodb:DeleteTable
              - dynamodb:UpdateTableReplicaAutoScaling
              - dynamodb:UpdateContinuousBackups
              - dynamodb:TagResource
              - dynamodb:PartiQLSelect
              - dynamodb:PartiQLInsert
              - dynamodb:GetItem
              - dynamodb:UpdateGlobalTableVersion
              - dynamodb:CreateGlobalTable
              - dynamodb:EnableKinesisStreamingDestination
              - dynamodb:ImportTable
              - dynamodb:BatchGetItem
              - dynamodb:DisableKinesisStreamingDestination
              - dynamodb:UpdateTimeToLive
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:UntagResource
              - dynamodb:PutItem
              - dynamodb:PartiQLUpdate
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:StartAwsBackupJob
              - dynamodb:UpdateItem
              - dynamodb:DeleteTableReplica
              - dynamodb:CreateTable
              - dynamodb:UpdateGlobalTableSettings
              - dynamodb:RestoreTableFromAwsBackup
              - dynamodb:RestoreTableFromBackup
              - dynamodb:ExportTableToPointInTime
              - dynamodb:UpdateTable
              - dynamodb:PartiQLDelete
            Resource: !Sub arn:aws:dynamodb:*:${AWS::AccountId}:table/*
          - Effect: Allow
            Action:
              - dynamodb:List*
              - dynamodb:DescribeReservedCapacityOfferings
              - dynamodb:DescribeReservedCapacity
              - dynamodb:PurchaseReservedCapacityOfferings
              - dynamodb:DescribeLimits
              - dynamodb:DescribeEndpoints
            Resource: "*"
          - Effect: Allow
            Action:
              - firehose:DescribeDeliveryStream
              - firehose:DeleteDeliveryStream
              - firehose:PutRecord
              - firehose:StartDeliveryStreamEncryption
              - firehose:CreateDeliveryStream
              - firehose:PutRecordBatch
              - firehose:StopDeliveryStreamEncryption
              - firehose:ListTagsForDeliveryStream
              - firehose:TagDeliveryStream
              - firehose:UpdateDestination
              - firehose:UntagDeliveryStream
            Resource: !Sub arn:aws:firehose:*:${AWS::AccountId}:deliverystream/*
          - Effect: Allow
            Action: firehose:ListDeliveryStreams
            Resource: "*"
          - Effect: Allow
            Action:
              - elasticache:*
            Resource: '*'

  CodeBuildPolicyECS:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-ECS
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - application-autoscaling:DeleteScalingPolicy
              - application-autoscaling:DeregisterScalableTarget
              - application-autoscaling:DescribeScalableTargets
              - application-autoscaling:DescribeScalingActivities
              - application-autoscaling:DescribeScalingPolicies
              - application-autoscaling:PutScalingPolicy
              - application-autoscaling:RegisterScalableTarget
              - application-autoscaling:DescribeScheduledActions              
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:CreateLaunchConfiguration
              - autoscaling:DeleteAutoScalingGroup
              - autoscaling:DeleteLaunchConfiguration
              - autoscaling:Describe*
              - autoscaling:UpdateAutoScalingGroup
              - batch:*
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStack*
              - cloudformation:UpdateStack
              - cloudwatch:DeleteAlarms
              - cloudwatch:DescribeAlarms
              - cloudwatch:Get*
              - cloudwatch:Put*
              - codedeploy:BatchGetApplicationRevisions
              - codedeploy:BatchGetApplications
              - codedeploy:BatchGetDeploymentGroups
              - codedeploy:BatchGetDeployments
              - codedeploy:ContinueDeployment
              - codedeploy:CreateApplication
              - codedeploy:CreateDeployment
              - codedeploy:CreateDeploymentGroup
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:GetDeploymentGroup
              - codedeploy:GetDeploymentTarget
              - codedeploy:ListApplicationRevisions
              - codedeploy:ListApplications
              - codedeploy:ListDeploymentConfigs
              - codedeploy:ListDeploymentGroups
              - codedeploy:ListDeployments
              - codedeploy:ListDeploymentTargets
              - codedeploy:RegisterApplicationRevision
              - codedeploy:StopDeployment
              - ec2:AssociateRouteTable
              - ec2:AttachInternetGateway
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CancelSpotFleetRequests
              - ec2:CreateInternetGateway
              - ec2:CreateLaunchTemplate
              - ec2:DeleteLaunchTemplate
              - ec2:Describe*
              - ec2:RequestSpotFleet
              - ec2:RunInstances
              - ecs:*
              - elasticfilesystem:DescribeAccessPoints
              - elasticfilesystem:DescribeFileSystems
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DeleteRule
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:DescribeTargetGroups
              - events:DeleteRule
              - events:DescribeRule
              - events:ListRuleNamesByTarget
              - events:ListTargetsByRule
              - events:PutRule
              - events:PutTargets
              - events:RemoveTargets
              - pipes:DeletePipe              
              - pipes:CreatePipe 
              - pipes:UpdatePipe               
              - pipes:DescribePipe               
              - pipes:ListPipes               
              - fsx:DescribeFileSystems
              - iam:ListAttachedRolePolicies
              - iam:ListInstanceProfiles
              - iam:ListRoles
              - iam:PassRole
              - lambda:ListFunctions
              - logs:CreateLogGroup
              - logs:DescribeLogGroups
              - logs:FilterLogEvents
              - route53:CreateHostedZone
              - route53:DeleteHostedZone
              - route53:GetHealthCheck
              - route53:GetHostedZone
              - route53:ListHostedZonesByName
              - servicediscovery:CreatePrivateDnsNamespace
              - servicediscovery:CreateService
              - servicediscovery:DeleteService
              - servicediscovery:GetNamespace
              - servicediscovery:GetOperation
              - servicediscovery:GetService
              - servicediscovery:ListNamespaces
              - servicediscovery:ListServices
              - servicediscovery:UpdateService
              - sns:ListTopics
              - elasticloadbalancing:DescribeRules
              - secretsmanager:ListSecrets
              - events:Put*
              - events:List*
              - events:Remove*
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
              - ssm:GetParametersByPath
            Resource: arn:aws:ssm:*:*:parameter/aws/service/ecs*
          - Effect: Allow
            Action:
              - ec2:DeleteInternetGateway
              - ec2:DeleteRoute
              - ec2:DeleteRouteTable
              - ec2:DeleteSecurityGroup
            Resource:
              - "*"
            Condition:
              StringLike:
                ec2:ResourceTag/aws:cloudformation:stack-name: EC2ContainerService-*
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - "*"
            Condition:
              StringLike:
                iam:PassedToService: ecs-tasks.amazonaws.com
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - arn:aws:iam::*:role/ecsInstanceRole*
            Condition:
              StringLike:
                iam:PassedToService:
                  - ec2.amazonaws.com
                  - ec2.amazonaws.com.cn
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - arn:aws:iam::*:role/ecsAutoscaleRole*
            Condition:
              StringLike:
                iam:PassedToService:
                  - application-autoscaling.amazonaws.com
                  - application-autoscaling.amazonaws.com.cn
          - Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: "*"
            Condition:
              StringLike:
                iam:AWSServiceName:
                  - autoscaling.amazonaws.com
                  - ecs.amazonaws.com
                  - elasticache.amazonaws.com
                  - opensearchservice.amazonaws.com
                  - kinesisreplication.dynamodb.amazonaws.com      
                  - ecs.application-autoscaling.amazonaws.com
                  - spot.amazonaws.com
                  - spotfleet.amazonaws.com
          - Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/management.chatbot.amazonaws.com/AWSServiceRoleForAWSChatbot"
          - Effect: Allow
            Action:
              - elasticloadbalancing:AddTags
            Resource: "*"
          - Effect: Allow
            Action:
              - "events:DescribeEventBus"
              - "events:CreateEventBus"
              - "events:DeleteEventBus"
            Resource: !Sub arn:aws:events:*:${AWS::AccountId}:event-bus/*
          - Effect: Allow
            Action: "events:ListEventBuses"
            Resource: "*"

  CodeBuildPolicyAPICloudfront:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-Cloudfront
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: Cloudfront
            Effect: Allow
            Action:
              - waf:ListWebACLs
              - cloudfront:ListCloudFrontOriginAccessIdentities
              - cloudfront:GetFunction
              - cloudfront:ListFunctions
              - iam:ListServerCertificates
              - cloudfront:DeleteCloudFrontOriginAccessIdentity
              - cloudfront:CreateStreamingDistributionWithTags
              - sns:ListTopics
              - cloudfront:CreateFunction
              - cloudfront:CreateCloudFrontOriginAccessIdentity
              - elasticloadbalancing:DescribeLoadBalancers
              - cloudfront:GetDistribution
              - cloudfront:UpdateFunction
              - cloudfront:GetCloudFrontOriginAccessIdentity
              - acm:ListCertificates
              - acm:DescribeCertificate
              - acm:ListTagsForCertificate
              - cloudfront:UpdateDistribution
              - cloudfront:UpdateCloudFrontOriginAccessIdentity
              - cloudfront:GetDistributionConfig
              - cloudfront:CreateInvalidation
              - waf:GetWebACL
              - cloudfront:UntagResource
              - cloudfront:GetCloudFrontOriginAccessIdentityConfig
              - cloudfront:PublishFunction
              - sns:ListSubscriptionsByTopic
              - cloudfront:TagResource
              - cloudfront:ListDistributionsByLambdaFunction
              - cloudfront:CreateDistribution
              - cloudfront:DescribeFunction
              - cloudfront:ListTagsForResource
              - cloudfront:ListDistributions
              - cloudfront:DeleteDistribution
              - cloudfront:DeleteFunction
            Resource: "*"
          - Effect: Allow
            Action: s3:PutBucketPolicy
            Resource: arn:aws:s3:::*
          - Effect: Allow
            Action: s3:ListAllMyBuckets
            Resource: arn:aws:s3:::*
          - Effect: Allow
            Action:
              - apigateway:DELETE
              - apigateway:SetWebACL
              - apigateway:PUT
              - apigateway:PATCH
              - apigateway:AddCertificateToDomain
              - apigateway:POST
              - apigateway:GET
              - apigateway:RemoveCertificateFromDomain
            Resource: "*"
          - Effect: Allow
            Action:
              - wafv2:TagResource
              - wafv2:ListResourcesForWebACL
              - wafv2:ListWebACLs
              - wafv2:AssociateWebACL
              - wafv2:ListTagsForResource
              - wafv2:UntagResource
              - wafv2:DisassociateWebACL
              - wafv2:GetWebACLForResource
              - wafv2:DeleteWebACL
              - wafv2:UpdateWebACL
              - wafv2:GetWebACL
              - wafv2:CreateWebACL
            Resource: "*"

  CodeBuildPolicyEventLogs:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-Cloudwatch
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricAlarm
              - cloudwatch:PutDashboard
              - cloudwatch:DeleteDashboards
              - cloudwatch:GetDashboard
            Resource:
              - !Sub arn:aws:cloudwatch:*:${AWS::AccountId}:alarm:*
              - !Sub arn:aws:cloudwatch::${AWS::AccountId}:dashboard/*
          - Effect: Allow
            Action: cloudwatch:ListDashboards
            Resource: "*"
          - Effect: Allow
            Action: events:DescribeRule
            Resource: !Sub arn:aws:events:*:${AWS::AccountId}:rule/*/*
          - Effect: Allow
            Action: events:DescribeRule
            Resource: !Sub arn:aws:events:*:${AWS::AccountId}:rule/*
          - Effect: Allow
            Action:
              - logs:Create*
              - logs:DescribeLogStreams
              - logs:DescribeSubscriptionFilters
              - logs:TestMetricFilter
              - logs:DescribeMetricFilters
              - logs:CreateLogGroup
              - logs:Put*
              - logs:Delete*
            Resource: "*"
          - Effect: Allow
            Action:
              - dynamodb:Describe*
              - dynamodb:List*
              - dynamodb:UpdateTable
              - dynamodb:UpdateContinuousBackups
              - dynamodb:Create*
              - dynamodb:Delete*
              - dynamodb:Enable*
              - dynamodb:DescribeKinesisStreamingDestination
              - dynamodb:DisableKinesisStreamingDestination
            Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  CodeBuildPolicyIAM:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-IAM
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: IAM
            Effect: Allow
            Action:
              - iam:CreatePolicy
              - iam:DetachRolePolicy
              - iam:GetPolicy
              - iam:DeletePolicy
              - iam:CreateRole
              - iam:AttachRolePolicy
              - iam:PutRolePolicy
              - iam:CreatePolicyVersion
              - iam:GetRolePolicy
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - !Sub arn:aws:iam::${AWS::AccountId}:policy/*
          - Effect: Allow
            Action:
              - iam:GetPolicyVersion
              - iam:CreatePolicyVersion
              - iam:DeletePolicyVersion
              - iam:SetDefaultPolicyVersion
              - iam:ListPolicyVersions
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:policy/*
          - Effect: Allow
            Action:
              - "kms:EnableKey"
              - "kms:Get*"
              - "kms:ImportKeyMaterial"
              - "kms:Decrypt"
              - "kms:UntagResource"
              - "kms:PutKeyPolicy"
              - "kms:Generate*"
              - "kms:Verify"
              - "kms:List*"
              - "kms:CancelKeyDeletion"
              - "kms:ReplicateKey"
              - "kms:SynchronizeMultiRegionKey"
              - "kms:TagResource"
              - "kms:UpdatePrimaryRegion"
              - "kms:Encrypt"
              - "kms:ScheduleKeyDeletion"
              - "kms:ReEncryptTo"
              - "kms:DescribeKey"
              - "kms:Sign"
              - "kms:CreateGrant"
              - "kms:EnableKeyRotation"
              - "kms:UpdateKeyDescription"
              - "kms:DeleteImportedKeyMaterial"
              - "kms:DisableKey"
              - "kms:ReEncryptFrom"
              - "kms:RetireGrant"
              - "kms:VerifyMac"
              - "kms:UpdateAlias"
              - "kms:RevokeGrant"
              - "kms:CreateAlias"
              - "kms:DeleteAlias"
            Resource:
              - !Sub arn:aws:kms:*:${AWS::AccountId}:key/*
              - !Sub arn:aws:kms:*:${AWS::AccountId}:alias/*
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - "kms:DescribeCustomKeyStores"
              - "kms:List*"
              - "kms:DeleteCustomKeyStore"
              - "kms:GenerateRandom"
              - "kms:UpdateCustomKeyStore"
              - "kms:DisconnectCustomKeyStore"
              - "kms:CreateKey"
              - "kms:ConnectCustomKeyStore"
              - "kms:CreateCustomKeyStore"
            Resource: "*"

  CodeBuildNetworking:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-Networking
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - ec2:AcceptVpcPeeringConnection
              - ec2:AcceptVpcEndpointConnections
              - ec2:AllocateAddress
              - ec2:AssignIpv6Addresses
              - ec2:AssignPrivateIpAddresses
              - ec2:AssociateAddress
              - ec2:AssociateDhcpOptions
              - ec2:AssociateRouteTable
              - ec2:AssociateSubnetCidrBlock
              - ec2:AssociateVpcCidrBlock
              - ec2:AttachClassicLinkVpc
              - ec2:AttachInternetGateway
              - ec2:AttachNetworkInterface
              - ec2:AttachVpnGateway
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateCarrierGateway
              - ec2:CreateCustomerGateway
              - ec2:CreateDefaultSubnet
              - ec2:CreateDefaultVpc
              - ec2:CreateDhcpOptions
              - ec2:CreateEgressOnlyInternetGateway
              - ec2:CreateFlowLogs
              - ec2:CreateInternetGateway
              - ec2:CreateLocalGatewayRouteTableVpcAssociation
              - ec2:CreateNatGateway
              - ec2:CreateNetworkAcl
              - ec2:CreateNetworkAclEntry
              - ec2:CreateNetworkInterface
              - ec2:CreateNetworkInterfacePermission
              - ec2:CreateRoute
              - ec2:CreateRouteTable
              - ec2:CreateSecurityGroup
              - ec2:CreateSubnet
              - ec2:CreateTags
              - ec2:CreateVpc
              - ec2:CreateVpcEndpoint
              - ec2:CreateVpcEndpointConnectionNotification
              - ec2:CreateVpcEndpointServiceConfiguration
              - ec2:CreateVpcPeeringConnection
              - ec2:CreateVpnConnection
              - ec2:CreateVpnConnectionRoute
              - ec2:CreateVpnGateway
              - ec2:DeleteCarrierGateway
              - ec2:DeleteCustomerGateway
              - ec2:DeleteDhcpOptions
              - ec2:DeleteEgressOnlyInternetGateway
              - ec2:DeleteFlowLogs
              - ec2:DeleteInternetGateway
              - ec2:DeleteLocalGatewayRouteTableVpcAssociation
              - ec2:DeleteNatGateway
              - ec2:DeleteNetworkAcl
              - ec2:DeleteNetworkAclEntry
              - ec2:DeleteNetworkInterface
              - ec2:DeleteNetworkInterfacePermission
              - ec2:DeleteRoute
              - ec2:DeleteRouteTable
              - ec2:DeleteSecurityGroup
              - ec2:DeleteSubnet
              - ec2:DeleteTags
              - ec2:DeleteVpc
              - ec2:DeleteVpcEndpoints
              - ec2:DeleteVpcEndpointConnectionNotifications
              - ec2:DeleteVpcEndpointServiceConfigurations
              - ec2:DeleteVpcPeeringConnection
              - ec2:DeleteVpnConnection
              - ec2:DeleteVpnConnectionRoute
              - ec2:DeleteVpnGateway
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeCarrierGateways
              - ec2:DescribeClassicLinkInstances
              - ec2:DescribeCustomerGateways
              - ec2:DescribeDhcpOptions
              - ec2:DescribeEgressOnlyInternetGateways
              - ec2:DescribeFlowLogs
              - ec2:DescribeInstances
              - ec2:DescribeInternetGateways
              - ec2:DescribeIpv6Pools
              - ec2:DescribeLocalGatewayRouteTables
              - ec2:DescribeLocalGatewayRouteTableVpcAssociations
              - ec2:DescribeKeyPairs
              - ec2:DescribeMovingAddresses
              - ec2:DescribeNatGateways
              - ec2:DescribeNetworkAcls
              - ec2:DescribeNetworkInterfaceAttribute
              - ec2:DescribeNetworkInterfacePermissions
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribePrefixLists
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroupReferences
              - ec2:DescribeSecurityGroupRules
              - ec2:DescribeSecurityGroups
              - ec2:DescribeStaleSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeTags
              - ec2:DescribeVpcAttribute
              - ec2:DescribeVpcClassicLink
              - ec2:DescribeVpcClassicLinkDnsSupport
              - ec2:DescribeVpcEndpointConnectionNotifications
              - ec2:DescribeVpcEndpointConnections
              - ec2:DescribeVpcEndpoints
              - ec2:DescribeVpcEndpointServiceConfigurations
              - ec2:DescribeVpcEndpointServicePermissions
              - ec2:DescribeVpcEndpointServices
              - ec2:DescribeVpcPeeringConnections
              - ec2:DescribeVpcs
              - ec2:DescribeVpnConnections
              - ec2:DescribeVpnGateways
              - ec2:DetachClassicLinkVpc
              - ec2:DetachInternetGateway
              - ec2:DetachNetworkInterface
              - ec2:DetachVpnGateway
              - ec2:DisableVgwRoutePropagation
              - ec2:DisableVpcClassicLink
              - ec2:DisableVpcClassicLinkDnsSupport
              - ec2:DisassociateAddress
              - ec2:DisassociateRouteTable
              - ec2:DisassociateSubnetCidrBlock
              - ec2:DisassociateVpcCidrBlock
              - ec2:EnableVgwRoutePropagation
              - ec2:EnableVpcClassicLink
              - ec2:EnableVpcClassicLinkDnsSupport
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:ModifySecurityGroupRules
              - ec2:ModifySubnetAttribute
              - ec2:ModifyVpcAttribute
              - ec2:ModifyVpcEndpoint
              - ec2:ModifyVpcEndpointConnectionNotification
              - ec2:ModifyVpcEndpointServiceConfiguration
              - ec2:ModifyVpcEndpointServicePermissions
              - ec2:ModifyVpcPeeringConnectionOptions
              - ec2:ModifyVpcTenancy
              - ec2:MoveAddressToVpc
              - ec2:RejectVpcEndpointConnections
              - ec2:RejectVpcPeeringConnection
              - ec2:ReleaseAddress
              - ec2:ReplaceNetworkAclAssociation
              - ec2:ReplaceNetworkAclEntry
              - ec2:ReplaceRoute
              - ec2:ReplaceRouteTableAssociation
              - ec2:ResetNetworkInterfaceAttribute
              - ec2:RestoreAddressToClassic
              - ec2:RevokeSecurityGroupEgress
              - ec2:RevokeSecurityGroupIngress
              - ec2:UnassignIpv6Addresses
              - ec2:UnassignPrivateIpAddresses
              - ec2:UpdateSecurityGroupRuleDescriptionsEgress
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
            Resource: "*"
            Effect: Allow

  ###########################################################################
  ###  Utility codebuild used to list the deployed artifacts versions
  ###########################################################################
  ListDeployedVersionsCodebuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-ListDeployedVersionsCodebuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo "### NO PRE_BUILD"
            build:
              commands:
                - 'echo "### CLONE SCRIPTS ###"'
                - 'echo "#####################"'
                - 'git clone https://github.com/pagopa/pn-cicd.git'
                - '( cd pn-cicd && git checkout $cd_scripts_commitId )'
                - 'echo ""'
                - 'echo ""'
                - 'echo "### EXECUTE READ ENV VERSIONS ###"'
                - '( cd pn-cicd/cd-cli && ./readEnv.sh -r ${REGION} -e ${ENV_NAME} )'
                - 'echo ""'
                - 'echo ""'
                - 'echo "### DOWNLOAD DESIRED COMMIT IDS ###"'
                - 'aws s3api get-object --bucket ${DesiredCommitIdsBucketName} --key ${DesiredCommitIdsPath} desired-commit-ids-env.sh '
                - 'cat desired-commit-ids-env.sh'               
          artifacts:
            files:
              - 'desired-commit-ids-env.sh'
      Artifacts:
        Type: S3
        EncryptionDisabled: true
        Location: !Ref PipelineArtifactBucket
        Path: '/List_deployed_versions_codebuild_project/'
        NamespaceType: BUILD_ID
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
        EnvironmentVariables:
          - Name: REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: ENV_NAME
            Type: PLAINTEXT
            Value: !Ref EnvName
          - Name: DesiredCommitIdsBucketName
            Type: PLAINTEXT
            Value: !Ref CdArtifactBucket
          - Name: DesiredCommitIdsPath
            Type: PLAINTEXT
            Value: 'config/desired-commit-ids-env.sh'

  ###########################################################################
  ###                          PARTIAL PIPELINES                          ###
  ###########################################################################
  
  # INFRA AND AUTHFLEET
  #######################
  InfraAndAuthFleetDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-infra-authfleet-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # UpdateInfrastructure AND AuthFleet
            - Name: Update_Infrastructure
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateInfraCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: InfraOutput
              RunOrder: 2
            
  # FRONTEND
  #######################
  FrontEndDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-frontend-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update Frontend
            - Name: Update_Frontend
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateFrontendCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: FrontEndOutput
              RunOrder: 2


  # MICROSERVICE PN-DELIVERY
  ############################
  PnDeliveryDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-delivery-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-delivery
            - Name: Update_PnDelivery
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-delivery", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"1", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_delivery", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnDeliveryOutput
              RunOrder: 2
            
  # POST-DEPLOY
  ############################
  InfrastructurePostDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-infrastructure-post-deploy-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update infrastructure-post-deploy
            - Name: Update_InfrastructurePostDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref PostDeployScriptsCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PostDeployScriptsOutput
              RunOrder: 2            

  # MICROSERVICE PN-DELIVERY-PUSH
  ############################
  PnDeliveryPushDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-delivery-push-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-delivery-push
            - Name: Update_PnDeliveryPush
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-delivery-push", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"2", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_delivery_push", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnDeliveryPushOutput
              RunOrder: 2
            

  # MICROSERVICE PN-USER-ATTRIBUTES
  ############################
  PnUserAttributesDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-user-attributes-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-user-attributes
            - Name: Update_UserAttributes
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-user-attributes", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"7", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_user_attributes", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnUserAttributesOutput
              RunOrder: 2
            
  
  # MICROSERVICE PN-MANDATE
  ############################
  PnMandatesDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-mandate-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-mandate
            - Name: Update_PnMandate
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-mandate", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"4", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_mandate", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnMandateOutput
              RunOrder: 2
  
  # MICROSERVICE PN-EXTERNAL-REGISTRIES
  ############################
  PnExternalRegistryDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-external-registries-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-external-registries
            - Name: Update_ExternalRegistries
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-external-registries", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"6", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_external_registries", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnExternalRegistriesOutput
              RunOrder: 3


  # MICROSERVICE PN-DOWNTIME_LOGS
  ############################
  PnDowntimeLogsDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-downtime-logs-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-downtime-logs
            - Name: Update_DowntimeLogs
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-downtime-logs", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"8", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_downtime_logs", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnDowntimeLogsOutput
              RunOrder: 3


  # MICROSERVICE PN-RADD-FSU
  ############################
  PnRaddFsuDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-radd-fsu-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-radd-fsu
            - Name: Update_RaddFsu
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-radd-fsu", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"9", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_radd_fsu", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnRaddFsuOutput
              RunOrder: 3


  # MICROSERVICE PN-EXTERNAL-CHANNELS
  ############################
  PnExternalChannelsPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-external-channels-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-external-channels
            - Name: Update_PnExternalChannels
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                   {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                   {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                   {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                   {"name":"MsName", "value":"pn-external-channels", "type":"PLAINTEXT"},
                   {"name":"MsNumber", "value":"10", "type":"PLAINTEXT"},
                   {"name":"VarPrefix", "value":"pn_external_channels", "type":"PLAINTEXT"}
                 ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnExternalChannelsOutput
              RunOrder: 3



  # MICROSERVICE PN-LOGSAVER-BE
  ############################
  PnLogSaverDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-logsaver-be-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-logsaver-be
            - Name: Update_LogsaverBe
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-logsaver-be", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"10", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_logsaver_be", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnLogsaverBeOutput
              RunOrder: 3


  # MICROSERVICE PN-NATIONAL-REGISTRIES
  ############################
  PnNationalRegistriesDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-national-registries-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-national-registries
            - Name: Update_NationalRegistries
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-national-registries", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"11", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_national_registries", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnNationalRegistriesOutput
              RunOrder: 3
  
  # MICROSERVICE PN-APIKEY-MANAGER
  ############################
  PnApikeyManagerDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-apikey-manager-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-apikey-manager
            - Name: Update_ApikeyManager
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-apikey-manager", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"12", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_apikey_manager", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnApiKeyManagerOutput
              RunOrder: 3

  # MICROSERVICE PN-PAPER-CHANNEL
  ############################
  PnPaperChannelDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-pn-paper-channel-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-paper-channel
            - Name: Update_PnPaperChannel
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-paper-channel", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"13", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_paper_channel", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnPaperChannelOutput
              RunOrder: 3

  # MICROSERVICE PN-LOGEXTRACTOR-BE
  ############################
  PnLogextractorBeDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-logextractor-be-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-paper-channel
            - Name: Update_PnLogextractorBe
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-logextractor-be", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"17", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_logextractor_be", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnPaperChannelOutput
              RunOrder: 3

  # MICROSERVICE PN-PROGRESSION-SENSOR
  ############################
  PnProgressionSensorDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-progression-sensor-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-progression-sensor
            - Name: Update_PnProgressionSensor
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMultiLambdaServiceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-progression-sensor", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"0", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_progression_sensor", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnProgressionSensorOutput
              RunOrder: 3

  # MICROSERVICE PN-KAFKA-BRIDGE
  ############################
  PnKafkaBridgeDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-kafka-bridge-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1

            # Update pn-kafka-bridge
            - Name: Update_PnKafkaBridge
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-kafka-bridge", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"14", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_kafka_bridge", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnKafkaBridgeOutput
              RunOrder: 3

  # MICROSERVICE PN-RADD-BFF
  ############################
  PnRaddBffDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-radd-bff-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1

            # Update pn-radd-bff
            - Name: Update_PnRaddBff
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-radd-bff", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"16", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_radd_bff", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnRaddBffOutput
              RunOrder: 3

  # MICROSERVICE PN-PLATFORM-USAGE-ESTIMATES
  ############################
  PnPlatformUsageEstimatesDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-platform-usage-estimates-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update pn-platform-usage-estimates
            - Name: Update_PnPlatformUsageEstimates
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateMicroserviceCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"MsName", "value":"pn-platform-usage-estimates", "type":"PLAINTEXT"},
                    {"name":"MsNumber", "value":"15", "type":"PLAINTEXT"},
                    {"name":"VarPrefix", "value":"pn_platform_usage_estimates", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: PnPlatformUsageEstimatesOutput
              RunOrder: 3

  # HELPDESK FRONTEND
  #######################
  HelpdeskFeDeployPipeline:
    Condition: RequiresSingleProjects
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt ChooseAndLaunchPipelineCodeBuildRole.Arn
      Name: !Sub '${ProjectName}-helpdesk-fe-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            
            # Update Frontend
            - Name: Update_Frontend
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateHelpdeskCodeBuildProject
                PrimarySource: DesiredCommitIdsAndScripts
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"CiArtifactBucketName", "value":"${CiArtifactBucketNameParam}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: FrontEndOutput
              RunOrder: 2


  ###########################################################################
  ###  RUN E2E TESTS
  ###########################################################################
  ScheduledRule: 
    Condition: IsContinuousDeliveryCondition
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "cron(0 7-19/2 ? * MON-FRI *)"
      State: "ENABLED"
      RoleArn: !GetAtt "EventBusRunCodeBuildRole.Arn"
      Targets: 
        - Id: "TestRunner"
          RoleArn: !GetAtt "EventBusRunCodeBuildRole.Arn"
          Arn: 
            Fn::GetAtt: 
              - "RunTestsCodebuildProject"
              - "Arn"
          
  
  ###########################################################################
  ###  Utility that run e2e tests
  ###########################################################################
  RunTestsCodebuildProject:
    Condition: IsTestCondition
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-RunE2eTestsCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      ConcurrentBuildLimit: 2
      TimeoutInMinutes: 120
      Source: 
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo "### NO PRE_BUILD"
            build:
              commands:
                    - |
                      API_KEY=$( aws secretsmanager get-secret-value --secret-id secretsForTests | jq '.SecretString' | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g' | jq -r '.e2eTestApiKey' )
                      API_KEY_2=$( aws secretsmanager get-secret-value --secret-id secretsForTests | jq '.SecretString' | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g' | jq -r '.e2eTestApiKey2' )
                      API_KEY_GA=$( aws secretsmanager get-secret-value --secret-id secretsForTests | jq '.SecretString' | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g' | jq -r '.e2eTestApiKeyGA' )
                      API_KEY_APPIO=$( aws secretsmanager get-secret-value --secret-id secretsForTests | jq '.SecretString' | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g' | jq -r '.e2eAppIOTestApiKey' )
                      TOKEN_PA_1=$( aws secretsmanager get-secret-value --secret-id secretsForTests | jq '.SecretString' | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g' | jq -r '.e2eTestBearerTokenPA1' )
                      CRISTOFORO_C=$( aws secretsmanager get-secret-value --secret-id secretsForTests | jq '.SecretString' | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g' | jq -r '.e2eTestBearerTokenCristoforoC' )
                      FIERAMOSCA_E=$( aws secretsmanager get-secret-value --secret-id secretsForTests | jq '.SecretString' | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g' | jq -r '.e2eTestBearerTokenFieramoscaE' )
                      PRE_RETENTION_TIME=$(aws ssm get-parameters --names /pn-test-e2e/preLoadRetetionTime --query "Parameters[*].Value" --output text)
                      LOAD_RETENTION_TIME=$(aws ssm get-parameters --names /pn-test-e2e/loadRetentionTime --query "Parameters[*].Value" --output text)
                      SAFE_STORAGE_URL=$(aws ssm get-parameters --names /pn-test-e2e/safeStorageDevUrl --query "Parameters[*].Value" --output text)
                      PA_TAX_ID_1=$(aws ssm get-parameters --names /pn-test-e2e/paTaxId1 --query "Parameters[*].Value" --output text)
                      PA_TAX_ID_2=$(aws ssm get-parameters --names 	/pn-test-e2e/paTaxId2 --query "Parameters[*].Value" --output text)
                      PA_TAX_ID_GA=$(aws ssm get-parameters --names /pn-test-e2e/paTaxIdGA --query "Parameters[*].Value" --output text)
                      USER_TAX_ID_1=$(aws ssm get-parameters --names /pn-test-e2e/userTaxId1 --query "Parameters[*].Value" --output text)
                      USER_TAX_ID_2=$(aws ssm get-parameters --names /pn-test-e2e/userTaxId2 --query "Parameters[*].Value" --output text)
                      DOMAIN=$(aws ssm get-parameters --names /pn-test-e2e/domain --query "Parameters[*].Value" --output text)
                    - |
                      echo "### CLONE E2E TEST REPOSITORY ###"
                      echo "#####################"
                      git clone https://github.com/pagopa/pn-b2b-client.git pn-b2b-client
                      ( cd pn-b2b-client && ./mvnw -Dtest=it.pagopa.pn.cucumber.${TEST_SUITE:-CucumberDevIntegrationTest} -Dpn.external.base-url=https://api.${ENV_NAME}.${DOMAIN} '-Dpn.external.api-key=${API_KEY}' '-Dpn.external.bearer-token-pa-1=${TOKEN_PA_1}' '-Dpn.external.api-key-taxID=${PA_TAX_ID_1}' '-Dpn.external.api-key-2-taxID=${PA_TAX_ID_2}' '-Dpn.external.api-key-GA-taxID=${PA_TAX_ID_GA}' '-Dpn.bearer-token.user1.taxID=${USER_TAX_ID_1}' '-Dpn.bearer-token.user2.taxID=${USER_TAX_ID_2}' '-Dpn.external.api-key-2=${API_KEY_2}' '-Dpn.external.api-key-GA=${API_KEY_GA}' '-Dpn.external.appio.api-key=${API_KEY_APPIO}' '-Dpn.webapi.external.base-url=https://webapi.${ENV_NAME}.${DOMAIN}' '-Dpn.appio.externa.base-url=https://api-io.${ENV_NAME}.${DOMAIN}' '-Dpn.bearer-token.user2=${CRISTOFORO_C}' '-Dpn.bearer-token.user1=${FIERAMOSCA_E}' '-Dpn.retention.time.preload=${PRE_RETENTION_TIME}' '-Dpn.retention.time.load=${LOAD_RETENTION_TIME}' '-Dpn.safeStorage.base-url=${SAFE_STORAGE_URL}' clean verify )
          reports:
            reportGroup: #Cucumber reports from json plugin
              files:
                - 'pn-b2b-client/target/cucumber-report.json'
              file-format: CUCUMBERJSON #Type of the report, defaults to JUNITXML
          cache:
            paths:
              - '/root/.m2/**/*'
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:6.0"
        EnvironmentVariables:
          - Name: REGION
            Type: PLAINTEXT
            Value: !Ref AWS::Region
          - Name: ENV_NAME
            Type: PLAINTEXT
            Value: !Ref EnvName
      VpcConfig:
        Fn::If:
          - HasE2EVPCConfig
          - VpcId: !Ref E2EVpcId
            Subnets: !Ref E2ESubnetsIds
            SecurityGroupIds: 
              - !Ref E2ESecurityGroupId
          - !Ref AWS::NoValue

  RunTestsCodebuildProjectLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsTestCondition
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${RunTestsCodebuildProject}"
      RetentionInDays: 14

Outputs:
  CdArtifactBucketName:
    Value: !Ref CdArtifactBucket

  CdEventBusArn:
    Value: 
      Fn::If:
        - IsContinuousDeliveryCondition
        - !GetAtt CdEventBus.Arn
        - ''
