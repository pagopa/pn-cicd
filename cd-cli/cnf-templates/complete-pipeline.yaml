AWSTemplateFormatVersion: '2010-09-09'
Description: 'Continuos Delivery pipeline for infrastructure deployment'
Parameters:
  
  ProjectName:
    Description: Usually "pn", can be changed for feature branch deployment
    Default: 'pn'
    Type: String
  
  EnvName:
    Description: 'dev, svil, test, coll, ...'
    Type: String
  
  CiArtifactBucketName:
    Default: 'pn-ci-root-ciartifactbucket-p7efvlz7rmox'
    Description: 'Bucket name containing lambda and frontend artifacts'
    Type: String


Resources:

  CdArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
  
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: "/"
      Policies:
        - PolicyName: PipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            # Allow pipeline to read/write from CiArtifactBucket
            - Effect: Allow
              Action:
                - "s3:Get*"
                - "s3:List*"
                - "s3-object-lambda:Get*"
                - "s3-object-lambda:List*"
                - "*"
              Resource: 
                - !Sub "arn:aws:s3:::${CdArtifactBucket}"
                - !Sub "arn:aws:s3:::${CdArtifactBucket}/*"
                - "*"
  
  # PIPELINE DEFINITION
  #######################
  DeployPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      Name: !Sub '${ProjectName}-env-update-pipeline'
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Download_Configurations
          Actions:
            # Trigger build when material set is changed
            - Name: Read_CommitIds_And_ImageUrls_File
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'config/desired-commit-ids-env.sh'
              OutputArtifacts:
                - Name: DesiredCommitIds
              Namespace: 'DesiredCommitIdsNS'
              RunOrder: 1
            # CodePipeline CodeArtifact integration issue
            - Name: EmptyZipBecauseCodeBuildWithCodepipelineNeedOneZipInputArtifact
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Version: 1
                Category: Source
              Configuration:
                PollForSourceChanges: false
                S3Bucket: !Ref CdArtifactBucket
                S3ObjectKey: 'empty.zip'
              OutputArtifacts:
                - Name: EmptyZip
              RunOrder: 1
        - Name: DeployAll
          Actions:
            # Download cd-cli scripts
            - Name: Download_CLI_Scripts
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DownloadScriptsCodebuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"DesiredCommitIdsBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsPath", "value":"config/desired-commit-ids-env.sh", "type":"PLAINTEXT"},
                    {"name":"DesiredCommitIdsVersionId", "value":"#{DesiredCommitIdsNS.VersionId}", "type":"PLAINTEXT"}
                  ]'
              InputArtifacts:
                - Name: EmptyZip
              OutputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              RunOrder: 1
            # UpdateInfrastructure
            - Name: Update_Infrastructure
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref UpdateInfraCodeBuildProject
                PrimarySource: EmptyZip
                EnvironmentVariables: !Sub '[
                    {"name":"EnvName", "value":"${EnvName}", "type":"PLAINTEXT"},
                    {"name":"AwsRegion", "value":"${AWS::Region}", "type":"PLAINTEXT"},
                    {"name":"CdArtifactBucketName", "value":"${CdArtifactBucket}", "type":"PLAINTEXT"},

                    CiArtifactBucketName
                  ]'
              InputArtifacts:
                - Name: DesiredCommitIdsAndScripts
              OutputArtifacts:
                - Name: InfraOutput
              RunOrder: 2


  # CODEBUILD used to download scripts
  ###################################################
  DownloadScriptsCodebuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-DownloadScriptsCodebuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo "### NO PRE_BUILD"
            build:
              commands:
                - 'echo "### ENVIRONMENT ###"'
                - 'echo "###################"'
                - env
                - 'echo ""'
                - 'echo "### DOWNLOAD DESIRED COMMIT IDS ###"'
                - 'aws s3api get-object --bucket ${DesiredCommitIdsBucketName} --key ${DesiredCommitIdsPath} desired-commit-ids-env.sh --version-id ${DesiredCommitIdsVersionId}'
                - 'cat desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "### SOURCE DESIRED COMMIT IDS ###"'
                - '. ./desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo ""'
                - 'echo "### UPDATED ENVIRONMENT ###"'
                - 'echo "###########################"'
                - env
                - 'echo ""'
                - 'echo "### CLONE SCRIPTS ###"'
                - 'echo "#####################"'
                - 'git clone https://github.com/pagopa/pn-cicd.git'
                - '( cd pn-cicd && git checkout $cd_scripts_commitId )'
                - 'ls -r pn-cicd'
                - 'echo ""'
                - 'echo ""'
                - 'echo "### PREPARE ARTIFACT ###"'
                - 'echo "########################"'
                - 'mkdir scripts'
                - 'cp -r pn-cicd/cd-cli scripts'
                - 'cp desired-commit-ids-env.sh scripts'
                - 'find scripts'
          artifacts:
            files:
              - 'scripts/**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:5.0"
        
  # CODEBUILD used to update infrastructure
  ###################################################
  UpdateInfraCodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${ProjectName}-UpdateInfraCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - VERSION=v4.20.1
                - BINARY=yq_linux_amd64
                - wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq
                - chmod +x /usr/bin/yq
                - VERSION=`yq --version`
                - echo "$VERSION"
                - yq --version
                - 'echo "### SCRIPTS ###"'
                - 'find scripts'
                - 'echo "### SOURCE DESIRED COMMIT IDS ###"'
                - '. ./scripts/desired-commit-ids-env.sh'
                - 'echo ""'
                - 'echo "###     ENVIRONMENT     ###"'
                - 'echo "###########################"'
                - env
            build:
              commands:
                - 'custom_config_dir=$( cd "scripts/cd-cli/custom-config" && pwd)'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "########################################################"'
                - 'echo "###                   UPDATE INFRA                   ###"'
                - 'echo "########################################################"'
                - 'echo ""'
                - '(cd scripts/cd-cli && ./deployInfra.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -b $CdArtifactBucket -w /tmp -c $custom_config_dir )'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo ""'
                - 'echo "########################################################"'
                - 'echo "###                 UPDATE AUTHFLEET                 ###"'
                - 'echo "########################################################"'
                - 'echo ""'
                - '(cd scripts/cd-cli && ./deployAuthFleet.sh -r $AwsRegion -e $EnvName -i $pn_infra_commitId -b $CdArtifactBucket -B $CiArtifactBucketName -w /tmp -c $custom_config_dir )'
          artifacts:
            files:
              - '**/*'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:5.0"
  
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-EnrichParamsCodeBuildRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
  
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-CodeBuildPolicy
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - "*"
            Resource:
              - "*"

Outputs:
  CiArtifactBucketName:
    Value: !Ref CdArtifactBucket

