  CodeBuildManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-General
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:GetTemplateSummary
              - cloudformation:ListStacks
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:DescribeStacks
              - cloudformation:ExecuteChangeSet
            Resource: "*"
          - Effect: Allow
            Action: cloudwatch:PutDashboard
            Resource: !Sub arn:aws:cloudwatch::${AWS::AccountId}:dashboard/*
          - Effect: Allow
            Action:
              - dynamodb:Describe*
              - dynamodb:List*
              - dynamodb:UpdateTable
              - dynamodb:UpdateContinuousBackups
              - dynamodb:Create*
            Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
          - Effect: Allow
            Action: elasticloadbalancing:ModifyRule
            Resource: !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener-rule/app/*
          - Effect: Allow
            Action: elasticloadbalancing:ModifyRule
            Resource: !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener-rule/net/*
          - Effect: Allow
            Action:
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:GetRole
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:GenerateDataKey
              - kms:GetKeyPolicy
              - kms:GetKeyRotationStatus
              - kms:ListResourceTags
            Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*
          - Effect: Allow
            Action:
              - lambda:GetFunction
              - lambda:GetFunctionCodeSigningConfig
              - lambda:RemovePermission
              - lambda:UpdateFunctionCode
            Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
          - Effect: Allow
            Action:
              - lambda:Create*
              - lambda:Get*
              - lambda:Delete*
              - lambda:TagResource
              - lambda:UpdateEventSourceMapping
              - lambda:AddPermission
              - lambda:InvokeFunction
              - lambda:GetEventSourceMapping
              - lambda:ListEventSourceMappings
              - lambda:DeleteFunction
              - lambda:CreateEventSourceMapping
              - lambda:DeleteEventSourceMapping
              - lambda:UntagResource
              - lambda:Update*
            Resource: "*"
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DeleteLogGroup
              - logs:DeleteSubscriptionFilter
              - logs:DescribeLogGroups
              - logs:ListTagsLogGroup
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
          - Effect: Allow
            Action: secretsmanager:GetSecretValue
            Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*
          - Effect: Allow
            Action: ssm:GetParameters
            Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
          - Effect: Allow
            Action:
              - application-autoscaling:RegisterScalableTarget
              - application-autoscaling:DescribeScalableTargets
              - application-autoscaling:DescribeScalingPolicies
              - application-autoscaling:PutScalingPolicy
              - application-autoscaling:DeleteScalingPolicy
              - application-autoscaling:DeregisterScalableTarget
            Resource: "*"
          - Effect: Allow
            Action:
              - cloudfront:Create*
              - cloudfront:Delete*
              - cloudfront:Get*
              - cloudfront:Update*
            Resource:
              - !Sub arn:aws:cloudfront::${AWS::AccountId}:cache-policy/*
              - !Sub arn:aws:cloudfront::${AWS::AccountId}:origin-request-policy/*
              - !Sub arn:aws:cloudfront::${AWS::AccountId}:response-headers-policy/*
          - Effect: Allow
            Action:
              - cloudfront:List*
            Resource: "*"
          - Effect: Allow
            Resource:
              - "*"
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
          - Effect: Allow
            Action:
              - ecs:UpdateService
              - ecs:CreateService
              - ecs:DeleteService
              - ecs:DescribeServices
            Resource: !Sub arn:aws:ecs:*:${AWS::AccountId}:service/*/*
          - Action:
              - ecs:DescribeServices
              - ecs:CreateTaskSet
              - ecs:UpdateServicePrimaryTaskSet
              - ecs:DeleteTaskSet
              - lambda:InvokeFunction
              - cloudwatch:DescribeAlarms
              - sns:Publish
              - s3:GetObject
              - s3:GetObjectVersion
            Resource: "*"
            Effect: Allow
          - Effect: Allow
            Action:
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:SetRulePriorities
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:RemoveTags
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:ModifyRule
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:DeleteRule
            Resource: "*"
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource: "*"
            Condition:
              StringLike:
                iam:PassedToService:
                  - ecs-tasks.amazonaws.com
          - Effect: Allow
            Action:
              - sqs:DeleteMessage
              - sqs:GetQueueUrl
              - sqs:ChangeMessageVisibility
              - sqs:UntagQueue
              - sqs:ReceiveMessage
              - sqs:SendMessage
              - sqs:GetQueueAttributes
              - sqs:ListQueueTags
              - sqs:TagQueue
              - sqs:RemovePermission
              - sqs:ListDeadLetterSourceQueues
              - sqs:AddPermission
              - sqs:PurgeQueue
              - sqs:DeleteQueue
              - sqs:CreateQueue
              - sqs:SetQueueAttributes
            Resource: !Sub arn:aws:sqs:*:${AWS::AccountId}:*
          - Effect: Allow
            Action: sqs:ListQueues
            Resource: "*"          

  CodeBuildPolicyR53:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-R53
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - route53:ListTagsForResources
              - route53:DisassociateVPCFromHostedZone
              - route53:GetHostedZone
              - route53:ChangeResourceRecordSets
              - route53:ChangeTagsForResource
              - route53:ListResourceRecordSets
              - route53:DeleteHostedZone
              - route53:AssociateVPCWithHostedZone
              - route53:ListTagsForResource
            Resource: arn:aws:route53:::hostedzone/*
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - route53:Delete*
              - route53:Disable*
              - route53:Create*
              - route53:EnableHostedZoneDNSSEC
              - route53:Update*
              - route53:DeactivateKeySigningKey
              - route53:ActivateKeySigningKey
              - route53:ChangeCidrCollection
              - route53:Get*
              - route53:List*
              - route53:DisassociateVPCFromHostedZone
              - route53:ChangeResourceRecordSets
              - route53:ChangeTagsForResource
              - route53:AssociateVPCWithHostedZone
            Resource: "*"
          - Effect: Allow
            Action:
              - ecs:Describe*
              - ecs:List*
              - eks:DescribeCluster
              - eks:ListClusters
              - logs:Describe*
              - logs:Get*
              - logs:TestMetricFilter
              - logs:FilterLogEvents
              - iam:ListInstanceProfiles
              - iam:ListRoles
            Resource: "*"
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - arn:aws:iam::*:role/AWSBatchServiceRole
              - arn:aws:iam::*:role/service-role/AWSBatchServiceRole
              - arn:aws:iam::*:role/ecsInstanceRole
              - arn:aws:iam::*:instance-profile/ecsInstanceRole
              - arn:aws:iam::*:role/iaws-ec2-spot-fleet-role
              - arn:aws:iam::*:role/aws-ec2-spot-fleet-role
              - arn:aws:iam::*:role/AWSBatchJobRole*
          - Effect: Allow
            Action:
              - iam:CreateServiceLinkedRole
            Resource: arn:aws:iam::*:role/*Batch*
            Condition:
              StringEquals:
                iam:AWSServiceName: batch.amazonaws.com

  CodeBuildPolicyS3:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-S3
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - s3:*Object
              - s3:GetObjectVersion
              - s3:PutObjectAcl
            Resource: arn:aws:s3:::*/*
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - s3:GetBucketPublicAccessBlock
              - s3:GetBucketPolicyStatus
              - s3:PutBucketPublicAccessBlock
              - s3:PutBucketOwnershipControls
              - s3:PutBucketPolicy
              - s3:CreateBucket
              - s3:ListBucket
              - s3:GetBucketOwnershipControls
              - s3:DeleteBucketPolicy
              - s3:GetBucketLocation
              - s3:DeleteBucket
              - s3:GetBucketPolicy
            Resource: arn:aws:s3:::*
          - Effect: Allow
            Action: s3:ListAllMyBuckets
            Resource: "*"

  CodeBuildPolicyECS:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-ECS
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - application-autoscaling:DeleteScalingPolicy
              - application-autoscaling:DeregisterScalableTarget
              - application-autoscaling:DescribeScalableTargets
              - application-autoscaling:DescribeScalingActivities
              - application-autoscaling:DescribeScalingPolicies
              - application-autoscaling:PutScalingPolicy
              - application-autoscaling:RegisterScalableTarget
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:CreateLaunchConfiguration
              - autoscaling:DeleteAutoScalingGroup
              - autoscaling:DeleteLaunchConfiguration
              - autoscaling:Describe*
              - autoscaling:UpdateAutoScalingGroup
              - batch:*
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStack*
              - cloudformation:UpdateStack
              - cloudwatch:DeleteAlarms
              - cloudwatch:DescribeAlarms
              - cloudwatch:Get*
              - cloudwatch:Put*
              - codedeploy:BatchGetApplicationRevisions
              - codedeploy:BatchGetApplications8
              - codedeploy:BatchGetDeploymentGroups
              - codedeploy:BatchGetDeployments
              - codedeploy:ContinueDeployment
              - codedeploy:CreateApplication
              - codedeploy:CreateDeployment
              - codedeploy:CreateDeploymentGroup
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:GetDeploymentGroup
              - codedeploy:GetDeploymentTarget
              - codedeploy:ListApplicationRevisions
              - codedeploy:ListApplications
              - codedeploy:ListDeploymentConfigs
              - codedeploy:ListDeploymentGroups
              - codedeploy:ListDeployments
              - codedeploy:ListDeploymentTargets
              - codedeploy:RegisterApplicationRevision
              - codedeploy:StopDeployment
              - ec2:AssociateRouteTable
              - ec2:AttachInternetGateway
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CancelSpotFleetRequests
              - ec2:CreateInternetGateway
              - ec2:CreateLaunchTemplate
              - ec2:DeleteLaunchTemplate
              - ec2:Describe*
              - ec2:RequestSpotFleet
              - ec2:RunInstances
              - ecs:*
              - elasticfilesystem:DescribeAccessPoints
              - elasticfilesystem:DescribeFileSystems
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DeleteRule
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:DescribeTargetGroups
              - events:DeleteRule
              - events:DescribeRule
              - events:ListRuleNamesByTarget
              - events:ListTargetsByRule
              - events:PutRule
              - events:PutTargets
              - events:RemoveTargets
              - fsx:DescribeFileSystems
              - iam:ListAttachedRolePolicies
              - iam:ListInstanceProfiles
              - iam:ListRoles
              - iam:PassRole
              - lambda:ListFunctions
              - logs:CreateLogGroup
              - logs:DescribeLogGroups
              - logs:FilterLogEvents
              - route53:CreateHostedZone
              - route53:DeleteHostedZone
              - route53:GetHealthCheck
              - route53:GetHostedZone
              - route53:ListHostedZonesByName
              - servicediscovery:CreatePrivateDnsNamespace
              - servicediscovery:CreateService
              - servicediscovery:DeleteService
              - servicediscovery:GetNamespace
              - servicediscovery:GetOperation
              - servicediscovery:GetService
              - servicediscovery:ListNamespaces
              - servicediscovery:ListServices
              - servicediscovery:UpdateService
              - sns:ListTopics
              - elasticloadbalancing:DescribeRules
              - secretsmanager:ListSecrets
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
              - ssm:GetParametersByPath
            Resource: arn:aws:ssm:*:*:parameter/aws/service/ecs*
          - Effect: Allow
            Action:
              - ec2:DeleteInternetGateway
              - ec2:DeleteRoute
              - ec2:DeleteRouteTable
              - ec2:DeleteSecurityGroup
            Resource:
              - "*"
            Condition:
              StringLike:
                ec2:ResourceTag/aws:cloudformation:stack-name: EC2ContainerService-*
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - "*"
            Condition:
              StringLike:
                iam:PassedToService: ecs-tasks.amazonaws.com
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - arn:aws:iam::*:role/ecsInstanceRole*
            Condition:
              StringLike:
                iam:PassedToService:
                  - ec2.amazonaws.com
                  - ec2.amazonaws.com.cn
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - arn:aws:iam::*:role/ecsAutoscaleRole*
            Condition:
              StringLike:
                iam:PassedToService:
                  - application-autoscaling.amazonaws.com
                  - application-autoscaling.amazonaws.com.cn
          - Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: "*"
            Condition:
              StringLike:
                iam:AWSServiceName:
                  - autoscaling.amazonaws.com
                  - ecs.amazonaws.com
                  - ecs.application-autoscaling.amazonaws.com
                  - spot.amazonaws.com
                  - spotfleet.amazonaws.com
          - Effect: Allow
            Action:
              - elasticloadbalancing:AddTags
            Resource: "*"

  CodeBuildPolicyAPICloudfront:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-Cloudfront
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: Cloudfront
            Effect: Allow
            Action:
              - waf:ListWebACLs
              - cloudfront:ListCloudFrontOriginAccessIdentities
              - cloudfront:GetFunction
              - cloudfront:ListFunctions
              - iam:ListServerCertificates
              - cloudfront:DeleteCloudFrontOriginAccessIdentity
              - cloudfront:CreateStreamingDistributionWithTags
              - sns:ListTopics
              - cloudfront:CreateFunction
              - cloudfront:CreateCloudFrontOriginAccessIdentity
              - elasticloadbalancing:DescribeLoadBalancers
              - cloudfront:GetDistribution
              - cloudfront:UpdateFunction
              - cloudfront:GetCloudFrontOriginAccessIdentity
              - acm:ListCertificates
              - cloudfront:UpdateDistribution
              - cloudfront:UpdateCloudFrontOriginAccessIdentity
              - cloudfront:GetDistributionConfig
              - waf:GetWebACL
              - cloudfront:UntagResource
              - cloudfront:GetCloudFrontOriginAccessIdentityConfig
              - cloudfront:PublishFunction
              - sns:ListSubscriptionsByTopic
              - cloudfront:TagResource
              - cloudfront:ListDistributionsByLambdaFunction
              - cloudfront:CreateDistribution
              - cloudfront:DescribeFunction
              - cloudfront:ListTagsForResource
              - cloudfront:ListDistributions
              - cloudfront:DeleteDistribution
              - cloudfront:DeleteFunction
            Resource: "*"
          - Effect: Allow
            Action: s3:PutBucketPolicy
            Resource: arn:aws:s3:::*
          - Effect: Allow
            Action: s3:ListAllMyBuckets
            Resource: arn:aws:s3:::*
          - Effect: Allow
            Action:
              - apigateway:DELETE
              - apigateway:SetWebACL
              - apigateway:PUT
              - apigateway:PATCH
              - apigateway:AddCertificateToDomain
              - apigateway:POST
              - apigateway:GET
              - apigateway:RemoveCertificateFromDomain
            Resource: "*"
          - Effect: Allow
            Action:
              - wafv2:TagResource
              - wafv2:ListResourcesForWebACL
              - wafv2:ListWebACLs
              - wafv2:AssociateWebACL
              - wafv2:ListTagsForResource
              - wafv2:UntagResource
              - wafv2:DisassociateWebACL
              - wafv2:GetWebACLForResource
              - wafv2:DeleteWebACL
              - wafv2:UpdateWebACL
              - wafv2:GetWebACL
              - wafv2:CreateWebACL
            Resource: "*"

  CodeBuildPolicyEventLogs:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-Cloudwatch
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricAlarm
              - cloudwatch:PutDashboard
              - cloudwatch:DeleteDashboards
              - cloudwatch:GetDashboard
            Resource:
              - !Sub arn:aws:cloudwatch:*:${AWS::AccountId}:alarm:*
              - !Sub arn:aws:cloudwatch::${AWS::AccountId}:dashboard/*
          - Effect: Allow
            Action: cloudwatch:ListDashboards
            Resource: "*"
          - Effect: Allow
            Action: events:DescribeRule
            Resource: !Sub arn:aws:events:*:${AWS::AccountId}:rule/*/*
          - Effect: Allow
            Action: events:DescribeRule
            Resource: !Sub arn:aws:events:*:${AWS::AccountId}:rule/*
          - Effect: Allow
            Action:
              - logs:PutMetricFilter
              - logs:CreateLogStream
              - logs:DeleteMetricFilter
              - logs:DeleteSubscriptionFilter
              - logs:DescribeLogStreams
              - logs:DescribeSubscriptionFilters
              - logs:TestMetricFilter
              - logs:DescribeMetricFilters
              - logs:PutSubscriptionFilter
              - logs:PutRetentionPolicy
              - logs:CreateLogGroup
              - logs:PutLogEvents
            Resource: "*"

  CodeBuildPolicyIAM:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-IAM
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: IAM
            Effect: Allow
            Action:
              - iam:CreatePolicy
              - iam:DetachRolePolicy
              - iam:GetPolicy
              - iam:DeletePolicy
              - iam:CreateRole
              - iam:AttachRolePolicy
              - iam:PutRolePolicy
              - iam:CreatePolicyVersion
              - iam:GetRolePolicy
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - !Sub arn:aws:iam::${AWS::AccountId}:policy/*
          - Effect: Allow
            Action:
              - iam:GetPolicyVersion
              - iam:CreatePolicyVersion
              - iam:DeletePolicyVersion
              - iam:SetDefaultPolicyVersion
              - iam:ListPolicyVersions
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:policy/*
          - Effect: Allow
            Action:
              - kms:TagResource
              - kms:UntagResource
              - kms:PutKeyPolicy
              - kms:CreateAlias
              - kms:DeleteAlias
              - kms:UpdateAlias
            Resource:
              - !Sub arn:aws:kms:*:${AWS::AccountId}:key/*
              - !Sub arn:aws:kms:*:${AWS::AccountId}:alias/*
          - Effect: Allow
            Action:
              - kms:ListAliases
              - kms:CreateKey
            Resource: "*"

  CodeBuildNetworking:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${ProjectName}-CodeBuildPolicy-Networking
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - ec2:AcceptVpcPeeringConnection
              - ec2:AcceptVpcEndpointConnections
              - ec2:AllocateAddress
              - ec2:AssignIpv6Addresses
              - ec2:AssignPrivateIpAddresses
              - ec2:AssociateAddress
              - ec2:AssociateDhcpOptions
              - ec2:AssociateRouteTable
              - ec2:AssociateSubnetCidrBlock
              - ec2:AssociateVpcCidrBlock
              - ec2:AttachClassicLinkVpc
              - ec2:AttachInternetGateway
              - ec2:AttachNetworkInterface
              - ec2:AttachVpnGateway
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateCarrierGateway
              - ec2:CreateCustomerGateway
              - ec2:CreateDefaultSubnet
              - ec2:CreateDefaultVpc
              - ec2:CreateDhcpOptions
              - ec2:CreateEgressOnlyInternetGateway
              - ec2:CreateFlowLogs
              - ec2:CreateInternetGateway
              - ec2:CreateLocalGatewayRouteTableVpcAssociation
              - ec2:CreateNatGateway
              - ec2:CreateNetworkAcl
              - ec2:CreateNetworkAclEntry
              - ec2:CreateNetworkInterface
              - ec2:CreateNetworkInterfacePermission
              - ec2:CreateRoute
              - ec2:CreateRouteTable
              - ec2:CreateSecurityGroup
              - ec2:CreateSubnet
              - ec2:CreateTags
              - ec2:CreateVpc
              - ec2:CreateVpcEndpoint
              - ec2:CreateVpcEndpointConnectionNotification
              - ec2:CreateVpcEndpointServiceConfiguration
              - ec2:CreateVpcPeeringConnection
              - ec2:CreateVpnConnection
              - ec2:CreateVpnConnectionRoute
              - ec2:CreateVpnGateway
              - ec2:DeleteCarrierGateway
              - ec2:DeleteCustomerGateway
              - ec2:DeleteDhcpOptions
              - ec2:DeleteEgressOnlyInternetGateway
              - ec2:DeleteFlowLogs
              - ec2:DeleteInternetGateway
              - ec2:DeleteLocalGatewayRouteTableVpcAssociation
              - ec2:DeleteNatGateway
              - ec2:DeleteNetworkAcl
              - ec2:DeleteNetworkAclEntry
              - ec2:DeleteNetworkInterface
              - ec2:DeleteNetworkInterfacePermission
              - ec2:DeleteRoute
              - ec2:DeleteRouteTable
              - ec2:DeleteSecurityGroup
              - ec2:DeleteSubnet
              - ec2:DeleteTags
              - ec2:DeleteVpc
              - ec2:DeleteVpcEndpoints
              - ec2:DeleteVpcEndpointConnectionNotifications
              - ec2:DeleteVpcEndpointServiceConfigurations
              - ec2:DeleteVpcPeeringConnection
              - ec2:DeleteVpnConnection
              - ec2:DeleteVpnConnectionRoute
              - ec2:DeleteVpnGateway
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeCarrierGateways
              - ec2:DescribeClassicLinkInstances
              - ec2:DescribeCustomerGateways
              - ec2:DescribeDhcpOptions
              - ec2:DescribeEgressOnlyInternetGateways
              - ec2:DescribeFlowLogs
              - ec2:DescribeInstances
              - ec2:DescribeInternetGateways
              - ec2:DescribeIpv6Pools
              - ec2:DescribeLocalGatewayRouteTables
              - ec2:DescribeLocalGatewayRouteTableVpcAssociations
              - ec2:DescribeKeyPairs
              - ec2:DescribeMovingAddresses
              - ec2:DescribeNatGateways
              - ec2:DescribeNetworkAcls
              - ec2:DescribeNetworkInterfaceAttribute
              - ec2:DescribeNetworkInterfacePermissions
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribePrefixLists
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroupReferences
              - ec2:DescribeSecurityGroupRules
              - ec2:DescribeSecurityGroups
              - ec2:DescribeStaleSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeTags
              - ec2:DescribeVpcAttribute
              - ec2:DescribeVpcClassicLink
              - ec2:DescribeVpcClassicLinkDnsSupport
              - ec2:DescribeVpcEndpointConnectionNotifications
              - ec2:DescribeVpcEndpointConnections
              - ec2:DescribeVpcEndpoints
              - ec2:DescribeVpcEndpointServiceConfigurations
              - ec2:DescribeVpcEndpointServicePermissions
              - ec2:DescribeVpcEndpointServices
              - ec2:DescribeVpcPeeringConnections
              - ec2:DescribeVpcs
              - ec2:DescribeVpnConnections
              - ec2:DescribeVpnGateways
              - ec2:DetachClassicLinkVpc
              - ec2:DetachInternetGateway
              - ec2:DetachNetworkInterface
              - ec2:DetachVpnGateway
              - ec2:DisableVgwRoutePropagation
              - ec2:DisableVpcClassicLink
              - ec2:DisableVpcClassicLinkDnsSupport
              - ec2:DisassociateAddress
              - ec2:DisassociateRouteTable
              - ec2:DisassociateSubnetCidrBlock
              - ec2:DisassociateVpcCidrBlock
              - ec2:EnableVgwRoutePropagation
              - ec2:EnableVpcClassicLink
              - ec2:EnableVpcClassicLinkDnsSupport
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:ModifySecurityGroupRules
              - ec2:ModifySubnetAttribute
              - ec2:ModifyVpcAttribute
              - ec2:ModifyVpcEndpoint
              - ec2:ModifyVpcEndpointConnectionNotification
              - ec2:ModifyVpcEndpointServiceConfiguration
              - ec2:ModifyVpcEndpointServicePermissions
              - ec2:ModifyVpcPeeringConnectionOptions
              - ec2:ModifyVpcTenancy
              - ec2:MoveAddressToVpc
              - ec2:RejectVpcEndpointConnections
              - ec2:RejectVpcPeeringConnection
              - ec2:ReleaseAddress
              - ec2:ReplaceNetworkAclAssociation
              - ec2:ReplaceNetworkAclEntry
              - ec2:ReplaceRoute
              - ec2:ReplaceRouteTableAssociation
              - ec2:ResetNetworkInterfaceAttribute
              - ec2:RestoreAddressToClassic
              - ec2:RevokeSecurityGroupEgress
              - ec2:RevokeSecurityGroupIngress
              - ec2:UnassignIpv6Addresses
              - ec2:UnassignPrivateIpAddresses
              - ec2:UpdateSecurityGroupRuleDescriptionsEgress
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
            Resource: "*"
            Effect: Allow