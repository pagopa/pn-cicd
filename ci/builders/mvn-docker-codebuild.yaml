AWSTemplateFormatVersion: '2010-09-09'
Description: CodeBuild for maven docker project
Parameters:
  GitHubProjectName:
    Description: Name of pagopa project name
    Type: String
    Default: pn-delivery
  CodeArtifactDomainName:
    Description: Used for maven repository access
    Type: String
    Default: pn-develop-bootstrap-step-01-domain
  CodeArtifactRepositoryName:
    Description: Used for maven repository access
    Type: String
    Default: pn-develop-bootstrap-step-01-repo
  NotificationSNSTopic:
    Type: String
    Default: 'none'
    Description: Topic for build and pipeline notification

Resources:

  EcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE
      RepositoryName: !Sub '${GitHubProjectName}'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${GitHubProjectName}-CodeBuild"
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: CODEARTIFACT_DOMAIN_NAME
            Type: PLAINTEXT
            Value: !Sub "${CodeArtifactDomainName}"
          - Name: CODEARTIFACT_DOMAIN_FULL
            Type: PLAINTEXT
            Value:
              Fn::Join:
                - ''
                - - !Sub "${CodeArtifactDomainName}"
                  - !Sub '-${AWS::AccountId}.d.codeartifact.${AWS::Region}.${AWS::URLSuffix}'
          - Name: CODEARTIFACT_REPO
            Type: PLAINTEXT
            Value: !Sub "${CodeArtifactRepositoryName}"
          - Name: GITHUB_PRJ_NAME
            Type: PLAINTEXT
            Value: !Sub "${GitHubProjectName}"
          - Name: GIT_DEFAULT_BRANCH
            Type: PLAINTEXT
            Value: develop
          - Name: ECR_URL
            Type: PLAINTEXT
            Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com'
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: !Sub "${AWS::Region}"
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Sub "${AWS::AccountId}"
          - Name: SETTINGS
            Type: PLAINTEXT
            Value: |
              <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                http://maven.apache.org/xsd/settings-1.0.0.xsd">
                <profiles>
                  <profile>
                    <id>ci-profile</id>
                    <activation>
                     <property><name>env.CODEBUILD_CI</name></property>
                    </activation>
                    <repositories>
                        <repository>
                        <id>pn-codeartifact-repo</id>
                        <name>AWS Code Artifact</name>
                        <url>https://${env.CODEARTIFACT_DOMAIN_FULL}/maven/${env.CODEARTIFACT_REPO}/</url>
                      </repository>
                    </repositories>
                  </profile>
                </profiles>
                <servers>
                  <server>
                    <id>pn-codeartifact</id>
                    <username>aws</username>
                    <password>${env.CODEARTIFACT_AUTH_TOKEN}</password>
                  </server>
                </servers>
                <mirrors>
                  <mirror>
                    <id>pn-codeartifact</id>
                    <name>pn-codeartifact</name>
                    <url>https://${env.CODEARTIFACT_DOMAIN_FULL}/maven/${env.CODEARTIFACT_REPO}/</url>
                    <mirrorOf>*</mirrorOf>
                  </mirror>
                </mirrors>
              </settings>

      Source:
        Type: GITHUB
        Location: !Sub 'https://github.com/pagopa/${GitHubProjectName}'
        BuildSpec: |
          version: 0.2
          env:
            shell: bash
            secrets-manager:
              SONAR_TOKEN: arn:aws:secretsmanager:eu-central-1:911845998067:secret:SonarCloud-7370vM:token
          phases:
            install:
              runtime-versions:
                 java: corretto11
            pre_build:
              on-failure: ABORT
              commands:
                - echo Logging in to Amazon ECR...
                - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
                - echo $SETTINGS > maven-settings.xml
                - export CODEARTIFACT_AUTH_TOKEN=$( aws codeartifact get-authorization-token --domain $CODEARTIFACT_DOMAIN_NAME --query authorizationToken --output text )
                - BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | sed 's/refs\/heads\///'); export BRANCH_NAME=${BRANCH_NAME:=$GIT_DEFAULT_BRANCH}
                - export BRANCH_TARGET=$(echo $CODEBUILD_WEBHOOK_BASE_REF | sed 's/refs\/heads\///')
                - export PR_NUM=$(echo $CODEBUILD_WEBHOOK_TRIGGER | sed 's/pr\///')
                - export CI_PROFILE="$CODEBUILD_CI"
                - export REPO_URL=https://${CODEARTIFACT_DOMAIN_FULL}/maven/${CODEARTIFACT_REPO}/
                - export MAVEN_CONFIG="--settings maven-settings.xml"
                - export VERSION=$( mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout )
                - export IMAGE_TAG=$VERSION
                - export IMAGE_REPO_NAME=$GITHUB_PRJ_NAME
                - export SOURCE_VERSION=${CODEBUILD_SOURCE_VERSION}
            build:
              on-failure: ABORT
              commands:
                - echo "Maven Build"
                - ./mvnw -DskipITs spring-boot:build-image
            post_build:
              on-failure: ABORT
              commands:
                - echo "Sonar"
                - |
                  if [[ "$BRANCH_NAME" =~ ^(main|develop)$ ]]; then
                     SONAR_ADD_OPTS="-Dsonar.branch.name=$BRANCH_NAME"
                  else 
                     SONAR_ADD_OPTS="-Dsonar.pullrequest.key=$PR_NUM -Dsonar.pullrequest.branch=$BRANCH_NAME -Dsonar.pullrequest.base=$BRANCH_TARGET"
                  fi
                - ./mvnw org.sonarsource.scanner.maven:sonar-maven-plugin:sonar $SONAR_ADD_OPTS -Dsonar.scm.exclusions.disabled=true -Dsonar.organization=pagopa -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=pagopa_${GITHUB_PRJ_NAME}
                - |
                  if [[ "$BRANCH_NAME" =~ ^(main|develop)$ ]]; then
                    echo "Deploy"
                    docker tag ${GITHUB_PRJ_NAME}:$VERSION $ECR_URL/${IMAGE_REPO_NAME}:$IMAGE_TAG
                    docker tag ${GITHUB_PRJ_NAME}:$VERSION $ECR_URL/${IMAGE_REPO_NAME}:$SOURCE_VERSION
                    docker tag ${GITHUB_PRJ_NAME}:$VERSION $ECR_URL/${IMAGE_REPO_NAME}:latest
                    docker image ls
                    echo Build completed on `date`
                    echo Pushing the Docker image...
                    docker push $ECR_URL/${IMAGE_REPO_NAME}:$IMAGE_TAG
                    docker push $ECR_URL/${IMAGE_REPO_NAME}:$SOURCE_VERSION
                    docker push $ECR_URL/${IMAGE_REPO_NAME}:latest
                  fi
          cache:
            paths:
              - '/root/.m2/**/*'
              - '/root/.sonar/**/*'
      TimeoutInMinutes: 10
      Cache:
        Type: LOCAL
        Modes: # You can specify one or more cache mode,
          - LOCAL_CUSTOM_CACHE
          - LOCAL_DOCKER_LAYER_CACHE
          - LOCAL_SOURCE_CACHE
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH, PULL_REQUEST_MERGED
            - Type: HEAD_REF
              Pattern: ^refs/heads/(main|develop)$
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED
            - Type: BASE_REF
              Pattern: ^refs/heads/(main|develop)$

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CodeBuildReportGroup
                Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*'
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - "*"
              - Sid: BearerTokenPolicy
                Effect: Allow
                Action:
                  - sts:GetServiceBearerToken
                Resource: "*"
                Condition:
                  StringEquals:
                    'sts:AWSServiceName': codeartifact.amazonaws.com
              - Sid: GitHubSecret
                Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: "*"
              - Sid: CodeArtifactGetAuthorizationTokenPolicy
                Effect: Allow
                Action:
                  - codeartifact:GetAuthorizationToken
                Resource: !Sub 'arn:aws:codeartifact:${AWS::Region}:${AWS::AccountId}:domain/${CodeArtifactDomainName}'
              - Sid: CodeArtifactRepository
                Effect: Allow
                Action:
                  - codeartifact:ReadFromRepository
                  - codeartifact:GetRepositoryEndpoint
                  - codeartifact:ListPackages
                Resource:
                  - !Sub 'arn:aws:codeartifact:${AWS::Region}:${AWS::AccountId}:repository/${CodeArtifactDomainName}/${CodeArtifactRepositoryName}'
              - Sid: CodeArtifactPackage
                Effect: Allow
                Action:
                  - codeartifact:PublishPackageVersion
                  - codeartifact:PutPackageMetadata
                  - codeartifact:ReadFromRepository
                  - codeartifact:DescribePackageVersion
                  - 'codeartifact:List*'
                  - 'codeartifact:Get*'
                  - 'codeartifact:Read*'
                Resource:
                  - !Sub 'arn:aws:codeartifact:${AWS::Region}:${AWS::AccountId}:package/${CodeArtifactDomainName}/${CodeArtifactRepositoryName}/*'
                  - !Sub 'arn:aws:codeartifact:${AWS::Region}:${AWS::AccountId}:domain/${CodeArtifactDomainName}'
                  - !Sub 'arn:aws:codeartifact:${AWS::Region}:${AWS::AccountId}:repository/${CodeArtifactDomainName}/${CodeArtifactRepositoryName}'
              - Sid: ElasticContainerReistry
                Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:CompleteLayerUpload
                  - ecr:CreateRepository
                  - ecr:DescribeImages
                  - ecr:DescribeRegistry
                  - ecr:DescribeRepositories
                  - ecr:GetAuthorizationToken
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:ListImages
                  - ecr:ListTagsForResource
                  - ecr:PutImage
                  - ecr:TagResource
                  - ecr:UntagResource
                  - ecr:UploadLayerPart
                Resource:
                  - "*"

  #  CodeBuildProjectLogGroup:
  #    Type: AWS::Logs::LogGroup
  #    Properties:
  #      LogGroupName: !Sub "/aws/codebuild/${CodeBuildProject}"
  #      RetentionInDays: 7

  CodeBuildNotifications:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      DetailType: FULL
      Name: !Sub '${GitHubProjectName}-CI'
      EventTypeIds:
        - codebuild-project-build-state-failed
      Resource: !Sub '${CodeBuildProject.Arn}'
      Targets:
        - TargetAddress: !Ref 'NotificationSNSTopic'
          TargetType: SNS

